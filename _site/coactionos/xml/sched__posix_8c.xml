<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="sched__posix_8c" kind="file">
    <compoundname>sched_posix.c</compoundname>
    <includes refid="config_8h" local="yes">config.h</includes>
    <includes local="no">sched.h</includes>
    <includes local="no">errno.h</includes>
    <includes refid="hwpl_8h" local="yes">hwpl.h</includes>
    <includes local="yes">sched_flags.h</includes>
    <incdepgraph>
      <node id="2254">
        <label>stdbool.h</label>
      </node>
      <node id="2250">
        <label>stdint.h</label>
      </node>
      <node id="2251">
        <label>stdlib.h</label>
      </node>
      <node id="2248">
        <label>errno.h</label>
      </node>
      <node id="2249">
        <label>hwpl.h</label>
        <link refid="hwpl_8h"/>
        <childnode refid="2250" relation="include">
        </childnode>
        <childnode refid="2251" relation="include">
        </childnode>
        <childnode refid="2252" relation="include">
        </childnode>
        <childnode refid="2253" relation="include">
        </childnode>
        <childnode refid="2254" relation="include">
        </childnode>
        <childnode refid="2255" relation="include">
        </childnode>
        <childnode refid="2256" relation="include">
        </childnode>
        <childnode refid="2257" relation="include">
        </childnode>
      </node>
      <node id="2256">
        <label>hwpl/arch.h</label>
      </node>
      <node id="2252">
        <label>string.h</label>
      </node>
      <node id="2246">
        <label>config.h</label>
        <link refid="config_8h"/>
      </node>
      <node id="2257">
        <label>hwpl/types.h</label>
        <link refid="types_8h_source"/>
        <childnode refid="2250" relation="include">
        </childnode>
        <childnode refid="2254" relation="include">
        </childnode>
      </node>
      <node id="2255">
        <label>hwpl/fault.h</label>
      </node>
      <node id="2258">
        <label>sched_flags.h</label>
      </node>
      <node id="2247">
        <label>sched.h</label>
      </node>
      <node id="2253">
        <label>stdio.h</label>
      </node>
      <node id="2245">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/sched/sched_posix.c</label>
        <link refid="sched_posix.c"/>
        <childnode refid="2246" relation="include">
        </childnode>
        <childnode refid="2247" relation="include">
        </childnode>
        <childnode refid="2248" relation="include">
        </childnode>
        <childnode refid="2249" relation="include">
        </childnode>
        <childnode refid="2258" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structpriv__set__scheduling__param__t" prot="public">priv_set_scheduling_param_t</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___s_c_h_e_d_1ga416d70cb234178e0e258fdb51b297d53" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void priv_set_scheduling_param</definition>
        <argsstring>(void *args)</argsstring>
        <name>priv_set_scheduling_param</name>
        <param>
          <type>void *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/sched/sched_posix.c" line="26" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/sched/sched_posix.c" bodystart="208" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_h_e_d_1ga41c8cba23568b415cab3d65307872a16" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int get_pid_task</definition>
        <argsstring>(pid_t pid)</argsstring>
        <name>get_pid_task</name>
        <param>
          <type>pid_t</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/sched/sched_posix.c" line="29" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/sched/sched_posix.c" bodystart="29" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_h_e_d_1gafaebd1698caeb9b9b9e614ad84edd609" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sched_get_priority_max</definition>
        <argsstring>(int policy)</argsstring>
        <name>sched_get_priority_max</name>
        <param>
          <type>int</type>
          <declname>policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function gets the maximum priority for <emphasis>policy</emphasis>. <simplesect kind="return"><para>Zero on success or -1 with errno (see <ref refid="group___e_r_r_n_o" kindref="compound">Error Numbers</ref>) set to:<itemizedlist>
<listitem><para>EINVAL: <emphasis>policy</emphasis> is not SCHED_RR, SCHED_FIFO, or SCHED_OTHER </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/sched/sched_posix.c" line="44" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/sched/sched_posix.c" bodystart="44" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_h_e_d_1gaf1f370fc36ea6b22ed42b5ee3cf82a81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sched_get_priority_min</definition>
        <argsstring>(int policy)</argsstring>
        <name>sched_get_priority_min</name>
        <param>
          <type>int</type>
          <declname>policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function gets the minimum priority for <emphasis>policy</emphasis>. <simplesect kind="return"><para>Zero on success or -1 with errno (see <ref refid="group___e_r_r_n_o" kindref="compound">Error Numbers</ref>) set to:<itemizedlist>
<listitem><para>EINVAL: <emphasis>policy</emphasis> is not SCHED_RR, SCHED_FIFO, or SCHED_OTHER </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/sched/sched_posix.c" line="62" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/sched/sched_posix.c" bodystart="62" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_h_e_d_1ga563c7ac53bac2c1b51379147e66c44ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sched_getparam</definition>
        <argsstring>(pid_t pid, struct sched_param *param)</argsstring>
        <name>sched_getparam</name>
        <param>
          <type>pid_t</type>
          <declname>pid</declname>
        </param>
        <param>
          <type>struct sched_param *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function gets the scheduling parameter (priority) for <emphasis>pid</emphasis>. <simplesect kind="return"><para>Zero on success or -1 with errno (see <ref refid="group___e_r_r_n_o" kindref="compound">Error Numbers</ref>) set to:<itemizedlist>
<listitem><para>EINVAL: <emphasis>policy</emphasis> is not SCHED_RR, SCHED_FIFO, or SCHED_OTHER</para></listitem><listitem><para>ESRCH: <emphasis>pid</emphasis> is not a valid process </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para><xrefsect id="todo_1_todo000005"><xreftitle>Todo</xreftitle><xrefdescription><para>check the permissions for EPERM </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/sched/sched_posix.c" line="81" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/sched/sched_posix.c" bodystart="81" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_h_e_d_1ga99fcb2532b1482d236dc04495a3f194d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sched_getscheduler</definition>
        <argsstring>(pid_t pid)</argsstring>
        <name>sched_getscheduler</name>
        <param>
          <type>pid_t</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function gets the scheduling policy. <simplesect kind="return"><para>The scheduling policy on success or -1 with errno (see <ref refid="group___e_r_r_n_o" kindref="compound">Error Numbers</ref>) set to:<itemizedlist>
<listitem><para>ESRCH: <emphasis>pid</emphasis> is not a valid process </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/sched/sched_posix.c" line="102" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/sched/sched_posix.c" bodystart="102" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_h_e_d_1ga99a3b9b823d4b20bf111719ccd1b59bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sched_rr_get_interval</definition>
        <argsstring>(pid_t pid, struct timespec *ts)</argsstring>
        <name>sched_rr_get_interval</name>
        <param>
          <type>pid_t</type>
          <declname>pid</declname>
        </param>
        <param>
          <type>struct timespec *</type>
          <declname>ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function gets the round robin interval for <emphasis>pid</emphasis>. <simplesect kind="return"><para>Zero on success or -1 with errno (see <ref refid="group___e_r_r_n_o" kindref="compound">Error Numbers</ref>) set to:<itemizedlist>
<listitem><para>EINVAL: <emphasis>ts</emphasis> is NULL</para></listitem><listitem><para>ESRCH: <emphasis>pid</emphasis> is not a valid process </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/sched/sched_posix.c" line="121" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/sched/sched_posix.c" bodystart="121" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_h_e_d_1ga06b497c4ea6bbabd2b62ba1a8a848a1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sched_setparam</definition>
        <argsstring>(pid_t pid, const struct sched_param *param)</argsstring>
        <name>sched_setparam</name>
        <param>
          <type>pid_t</type>
          <declname>pid</declname>
        </param>
        <param>
          <type>const struct sched_param *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function sets the process&apos;s scheduling paramater (priority). <simplesect kind="return"><para>Zero on success or -1 with errno (see <ref refid="group___e_r_r_n_o" kindref="compound">Error Numbers</ref>) set to:<itemizedlist>
<listitem><para>ESRCH: <emphasis>pid</emphasis> is not a valid process</para></listitem><listitem><para>EPERM: the calling process does not have permission to change the scheduling parameters </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/sched/sched_posix.c" line="139" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/sched/sched_posix.c" bodystart="139" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_h_e_d_1ga84ad29a6f2ad27370df09c664ac65eac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sched_setscheduler</definition>
        <argsstring>(pid_t pid, int policy, const struct sched_param *param)</argsstring>
        <name>sched_setscheduler</name>
        <param>
          <type>pid_t</type>
          <declname>pid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>policy</declname>
        </param>
        <param>
          <type>const struct sched_param *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function sets the scheduler policy and parameter (priority) for the process. <simplesect kind="return"><para>Zero on success or -1 with errno (see <ref refid="group___e_r_r_n_o" kindref="compound">Error Numbers</ref>) set to:<itemizedlist>
<listitem><para>EINVAL: <emphasis>policy</emphasis> is not SCHED_RR, SCHED_FIFO, or SCHED_OTHER</para></listitem><listitem><para>EPERM: the calling process does not have permission to change the scheduling parameters</para></listitem><listitem><para>ESRCH: <emphasis>pid</emphasis> is not a valid process </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para><xrefsect id="todo_1_todo000006"><xreftitle>Todo</xreftitle><xrefdescription><para>Set the policy </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/sched/sched_posix.c" line="168" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/sched/sched_posix.c" bodystart="168" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="group___s_c_h_e_d_1ga357cd4b34c13011749dfffb42b489f09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sched_yield</definition>
        <argsstring>(void)</argsstring>
        <name>sched_yield</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function causes the calling thread to yield the processor. The context is switched to the next active task. If no tasks are active, the CPU idles. <simplesect kind="return"><para>Zero </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/sched/sched_posix.c" line="203" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/sched/sched_posix.c" bodystart="203" bodyend="206"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Copyright<sp/>2011;<sp/>All<sp/>Rights<sp/>Reserved</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Please<sp/>see<sp/>http://www.coactionos.com/license.html<sp/>for</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>licensing<sp/>information.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sched.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hwpl_8h" kindref="compound">hwpl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sched_flags.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>policy;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sched_param<sp/>*<sp/>param;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}<sp/>priv_set_scheduling_param_t;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>priv_set_scheduling_param(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>args);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>get_pid_task(pid_t<sp/>pid){</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i<sp/>&lt;<sp/>task_get_total();<sp/>i++){</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(task_get_pid(i)<sp/>==<sp/>pid)<sp/>&amp;&amp;<sp/>!task_isthread_asserted(i)<sp/>){</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_c_h_e_d_1gafaebd1698caeb9b9b9e614ad84edd609" kindref="member">sched_get_priority_max</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>policy){</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(policy){</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SCHED_RR:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SCHED_FIFO:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SCHED_HIGHEST_PRIORITY;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SCHED_OTHER:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_c_h_e_d_1gaf1f370fc36ea6b22ed42b5ee3cf82a81" kindref="member">sched_get_priority_min</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>policy){</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(policy){</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SCHED_RR:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SCHED_FIFO:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SCHED_OTHER:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_c_h_e_d_1ga563c7ac53bac2c1b51379147e66c44ec" kindref="member">sched_getparam</ref>(pid_t<sp/>pid,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sched_param<sp/>*<sp/>param){</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>task<sp/>for<sp/>pid<sp/>thread<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>tid<sp/>=<sp/>get_pid_task(pid);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tid<sp/>&lt;<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ESRCH;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//copy<sp/>from<sp/>sched_table<sp/>to<sp/>param</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>memcpy(param,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;sched_table[tid].attr.schedparam,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sched_param));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_c_h_e_d_1ga99fcb2532b1482d236dc04495a3f194d" kindref="member">sched_getscheduler</ref>(pid_t<sp/>pid){</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tid;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>task<sp/>for<sp/>pid<sp/>thread<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>tid<sp/>=<sp/>get_pid_task(pid);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tid<sp/>&lt;<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ESRCH;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>the<sp/>scheduling<sp/>policy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PTHREAD_ATTR_GET_SCHED_POLICY(<sp/>(&amp;(sched_table[tid].attr))<sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_c_h_e_d_1ga99a3b9b823d4b20bf111719ccd1b59bd" kindref="member">sched_rr_get_interval</ref>(pid_t<sp/>pid,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*<sp/>ts){</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>get_pid_task(pid)<sp/>&lt;<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ESRCH;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ts-&gt;tv_sec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ts-&gt;tv_nsec<sp/>=<sp/>SCHED_RR_DURATION*1000*1000;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_c_h_e_d_1ga06b497c4ea6bbabd2b62ba1a8a848a1b" kindref="member">sched_setparam</ref>(pid_t<sp/>pid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sched_param<sp/>*<sp/>param){</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>priv_set_scheduling_param_t<sp/>args;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>task<sp/>for<sp/>pid<sp/>thread<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>args.tid<sp/>=<sp/>get_pid_task(pid);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>args.tid<sp/>&lt;<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ESRCH;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>args.policy<sp/>=<sp/>PTHREAD_ATTR_GET_SCHED_POLICY(<sp/>(&amp;(sched_table[args.tid].attr))<sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(param-&gt;sched_priority<sp/>&gt;<sp/><ref refid="group___s_c_h_e_d_1gafaebd1698caeb9b9b9e614ad84edd609" kindref="member">sched_get_priority_max</ref>(args.policy))<sp/>||</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(param-&gt;sched_priority<sp/>&lt;<sp/><ref refid="group___s_c_h_e_d_1gaf1f370fc36ea6b22ed42b5ee3cf82a81" kindref="member">sched_get_priority_min</ref>(args.policy))<sp/>){</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>args.param<sp/>=<sp/>param;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>hwpl_core_privcall(priv_set_scheduling_param,<sp/>&amp;args);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_c_h_e_d_1ga84ad29a6f2ad27370df09c664ac65eac" kindref="member">sched_setscheduler</ref>(pid_t<sp/>pid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>policy,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sched_param<sp/>*<sp/>param){</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>priv_set_scheduling_param_t<sp/>args;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>task<sp/>for<sp/>pid<sp/>thread<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>args.tid<sp/>=<sp/>get_pid_task(pid);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>args.tid<sp/>&lt;<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ESRCH;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(policy){</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SCHED_RR:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SCHED_FIFO:</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SCHED_OTHER:</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(param-&gt;sched_priority<sp/>&gt;<sp/><ref refid="group___s_c_h_e_d_1gafaebd1698caeb9b9b9e614ad84edd609" kindref="member">sched_get_priority_max</ref>(policy))<sp/>||</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(param-&gt;sched_priority<sp/>&lt;<sp/><ref refid="group___s_c_h_e_d_1gaf1f370fc36ea6b22ed42b5ee3cf82a81" kindref="member">sched_get_priority_min</ref>(policy))<sp/>){</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.policy<sp/>=<sp/>policy;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.param<sp/>=<sp/>param;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hwpl_core_privcall(priv_set_scheduling_param,<sp/>&amp;args);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___s_c_h_e_d_1ga357cd4b34c13011749dfffb42b489f09" kindref="member">sched_yield</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>hwpl_core_privcall(task_priv_switch_context,<sp/>NULL);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>priv_set_scheduling_param(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>args){</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>priv_set_scheduling_param_t<sp/>*<sp/>p<sp/>=<sp/>(priv_set_scheduling_param_t*)args;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>id;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>p-&gt;tid;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>PTHREAD_ATTR_SET_SCHED_POLICY(<sp/>(&amp;(sched_table[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">].attr)),<sp/>p-&gt;policy);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>memcpy((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;sched_table[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">].attr.schedparam,<sp/>p-&gt;param,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sched_param));</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>p-&gt;policy<sp/>==<sp/>SCHED_FIFO<sp/>){</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task_assert_isfifo(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task_deassert_isfifo(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/sched/sched_posix.c"/>
  </compounddef>
</doxygen>
