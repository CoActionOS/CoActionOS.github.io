<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="hibernate_8c" kind="file">
    <compoundname>hibernate.c</compoundname>
    <includes refid="config_8h" local="yes">config.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">sys/time.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes refid="hwpl_8h" local="yes">hwpl.h</includes>
    <includes local="yes">hwpl/wdt.h</includes>
    <includes refid="rtc_8h" local="yes">dev/rtc.h</includes>
    <includes local="yes">../sched/sched_flags.h</includes>
    <incdepgraph>
      <node id="2438">
        <label>stdbool.h</label>
      </node>
      <node id="2453">
        <label>ioctl.h</label>
        <link refid="ioctl_8h_source"/>
      </node>
      <node id="2444">
        <label>stdint.h</label>
      </node>
      <node id="2445">
        <label>stdlib.h</label>
      </node>
      <node id="2437">
        <label>errno.h</label>
      </node>
      <node id="2442">
        <label>fcntl.h</label>
      </node>
      <node id="2435">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/time/hibernate.c</label>
        <link refid="hibernate.c"/>
        <childnode refid="2436" relation="include">
        </childnode>
        <childnode refid="2437" relation="include">
        </childnode>
        <childnode refid="2438" relation="include">
        </childnode>
        <childnode refid="2439" relation="include">
        </childnode>
        <childnode refid="2440" relation="include">
        </childnode>
        <childnode refid="2441" relation="include">
        </childnode>
        <childnode refid="2442" relation="include">
        </childnode>
        <childnode refid="2443" relation="include">
        </childnode>
        <childnode refid="2451" relation="include">
        </childnode>
        <childnode refid="2452" relation="include">
        </childnode>
        <childnode refid="2454" relation="include">
        </childnode>
      </node>
      <node id="2443">
        <label>hwpl.h</label>
        <link refid="hwpl_8h"/>
        <childnode refid="2444" relation="include">
        </childnode>
        <childnode refid="2445" relation="include">
        </childnode>
        <childnode refid="2446" relation="include">
        </childnode>
        <childnode refid="2447" relation="include">
        </childnode>
        <childnode refid="2438" relation="include">
        </childnode>
        <childnode refid="2448" relation="include">
        </childnode>
        <childnode refid="2449" relation="include">
        </childnode>
        <childnode refid="2450" relation="include">
        </childnode>
      </node>
      <node id="2452">
        <label>dev/rtc.h</label>
        <link refid="rtc_8h"/>
        <childnode refid="2440" relation="include">
        </childnode>
        <childnode refid="2444" relation="include">
        </childnode>
        <childnode refid="2453" relation="include">
        </childnode>
        <childnode refid="2449" relation="include">
        </childnode>
      </node>
      <node id="2449">
        <label>hwpl/arch.h</label>
      </node>
      <node id="2446">
        <label>string.h</label>
      </node>
      <node id="2454">
        <label>../sched/sched_flags.h</label>
      </node>
      <node id="2436">
        <label>config.h</label>
        <link refid="config_8h"/>
      </node>
      <node id="2441">
        <label>unistd.h</label>
      </node>
      <node id="2440">
        <label>time.h</label>
      </node>
      <node id="2439">
        <label>sys/time.h</label>
      </node>
      <node id="2450">
        <label>hwpl/types.h</label>
        <link refid="types_8h_source"/>
        <childnode refid="2444" relation="include">
        </childnode>
        <childnode refid="2438" relation="include">
        </childnode>
      </node>
      <node id="2448">
        <label>hwpl/fault.h</label>
      </node>
      <node id="2451">
        <label>hwpl/wdt.h</label>
      </node>
      <node id="2447">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group___t_i_m_e_1ga0b0c5c77c61edd8308c4e6d4515dd936" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int microcomputer_osc_freq</definition>
        <argsstring></argsstring>
        <name>microcomputer_osc_freq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/time/hibernate.c" line="27" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group___t_i_m_e_1ga21dbc38795465db361a0e15da727335a" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int cpu_init_freq</definition>
        <argsstring></argsstring>
        <name>cpu_init_freq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/time/hibernate.c" line="28" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___t_i_m_e_1ga8901df9d663ffe98867ddd903fc115cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int set_alarm</definition>
        <argsstring>(int seconds)</argsstring>
        <name>set_alarm</name>
        <param>
          <type>int</type>
          <declname>seconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/time/hibernate.c" line="30" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/time/hibernate.c" bodystart="53" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="group___t_i_m_e_1gad5a41f354d8677b4594942a5f3309bdf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void priv_powerdown</definition>
        <argsstring>(void *args)</argsstring>
        <name>priv_powerdown</name>
        <param>
          <type>void *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/time/hibernate.c" line="31" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/time/hibernate.c" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="group___t_i_m_e_1ga2f53e30a2a8f5250d9324960a2c9a9ee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void priv_hibernate</definition>
        <argsstring>(void *args)</argsstring>
        <name>priv_hibernate</name>
        <param>
          <type>void *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/time/hibernate.c" line="32" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/time/hibernate.c" bodystart="38" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="group___t_i_m_e_1gae65665332278b3b47ba519a1aba0222b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hibernate</definition>
        <argsstring>(int seconds)</argsstring>
        <name>hibernate</name>
        <param>
          <type>int</type>
          <declname>seconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function puts the controller in hibernate mode. All CPU and peripheral activity is stopped. The RTC continues running and will wake up the controller after <emphasis>seconds</emphasis> has elapsed. When the controller wakes up, it resumes execution in the same state as before <emphasis><ref refid="group___c_a_o_s_1gae65665332278b3b47ba519a1aba0222b" kindref="member">hibernate()</ref></emphasis> was called.</para><para>Hibernate corresponds to <emphasis>CORE_SLEEP_DEEPSLEEP</emphasis>. It can be woken up before <emphasis>seconds</emphasis> elapsed if other interrupts are enabled such as pin change interrupts. See the device specific documentation for wakeup events for <emphasis>CORE_SLEEP_DEEPSLEEP</emphasis>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>seconds</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of seconds to hibernate (zero to hibernate indefinitely) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/time/hibernate.c" line="74" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/time/hibernate.c" bodystart="74" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="group___t_i_m_e_1gac149b46cea60ad2b3538a075d91ffacb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void powerdown</definition>
        <argsstring>(int seconds)</argsstring>
        <name>powerdown</name>
        <param>
          <type>int</type>
          <declname>seconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function turns the controller off. The RTC stays on and wakes up the controller after <emphasis>seconds</emphasis> has elapsed. When the controller wakes up from power down, it resets.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>seconds</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of seconds to powerdown (zero to powedown indefinitely) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/time/hibernate.c" line="94" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/time/hibernate.c" bodystart="94" bodyend="108"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Copyright<sp/>2011;<sp/>All<sp/>Rights<sp/>Reserved</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Please<sp/>see<sp/>http://www.coactionos.com/license.html<sp/>for</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>licensing<sp/>information.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hwpl_8h" kindref="compound">hwpl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hwpl/wdt.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rtc_8h" kindref="compound">dev/rtc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../sched/sched_flags.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>microcomputer_osc_freq;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cpu_init_freq;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_alarm(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seconds);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>priv_powerdown(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>args);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>priv_hibernate(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>args);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>priv_powerdown(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>args){</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>hwpl_core_sleep(0,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<ref refid="group___c_o_r_e_1ggae362c5b04fb1b6ea07f8bdaa21bc51f7a373788321a29fb5f9e3a3a5e6d838943" kindref="member">CORE_DEEPSLEEP_STANDBY</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>priv_hibernate(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>args){</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>WDT<sp/>only<sp/>runs<sp/>in<sp/>hibernate<sp/>on<sp/>certain<sp/>clock<sp/>sources</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>hwpl_wdt_priv_reset(NULL);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>hwpl_core_sleep(0,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<ref refid="group___c_o_r_e_1ggae362c5b04fb1b6ea07f8bdaa21bc51f7abdec31630a7b2a46bb60344530b8b9d9" kindref="member">CORE_DEEPSLEEP_STOP</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//reinitialize<sp/>the<sp/>Clocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>_hwpl_core_setclock(cpu_init_freq,<sp/>microcomputer_osc_freq);<sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>main<sp/>clock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>_hwpl_core_setusbclock(microcomputer_osc_freq);<sp/></highlight><highlight class="comment">//set<sp/>the<sp/>USB<sp/>clock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>WDT<sp/>to<sp/>previous<sp/>value<sp/>(it<sp/>only<sp/>runs<sp/>in<sp/>deep<sp/>sleep<sp/>with<sp/>certain<sp/>clock<sp/>sources)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>hwpl_wdt_priv_reset(NULL);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_alarm(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seconds){</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="structrtc__alarm__t" kindref="compound">rtc_alarm_t</ref><sp/>alarm;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>time_t<sp/>alarm_time;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>fd<sp/>=<sp/><ref refid="group___u_n_i___f_i_l_e___a_c_c_e_s_s_1gac843f2e35e60c3bbf1da47d84306f29b" kindref="member">open</ref>(</highlight><highlight class="stringliteral">&quot;/dev/rtc&quot;</highlight><highlight class="normal">,<sp/>O_RDWR);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fd<sp/>&gt;=<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alarm_time<sp/>=<sp/>time(NULL);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alarm_time<sp/>+=<sp/>seconds;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gmtime_r(&amp;alarm_time,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>tm*)&amp;alarm.<ref refid="structrtc__alarm__t_1aabc689ef7dc89b6ef7d6339ca8dfbe4c" kindref="member">time</ref>.<ref refid="structrtc__time__t_1ac2155b3641bef6ff8c9ad672c2e30fdd" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alarm.<ref refid="structrtc__alarm__t_1ae9eb1ee28fcfb5bfc5561337827cf644" kindref="member">type</ref><sp/>=<sp/><ref refid="group___r_t_c_1ggae65938264f8a116c77c92d7fab17ade2a976059f900a12b9f02432ed0b6a28892" kindref="member">RTC_ALARM_ONCE</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>the<sp/>alarm<sp/>for<sp/>&quot;seconds&quot;<sp/>from<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="group___u_n_i___f_i_l_e___a_c_c_e_s_s_1ga1e7463f2ee53d9da5a2ee24121aed25d" kindref="member">ioctl</ref>(fd,<sp/><ref refid="group___r_t_c_1ga4e0edc05fb0c989c5acf8b4927ae5d6d" kindref="member">I_RTC_SETALARM</ref>,<sp/>&amp;alarm);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_n_i___f_i_l_e___a_c_c_e_s_s_1gaacad1d135ca2779b583623678e36db7c" kindref="member">close</ref>(fd);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___t_i_m_e_1gae65665332278b3b47ba519a1aba0222b" kindref="member">hibernate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seconds){</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>deepsleep;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>deepsleep<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>seconds<sp/>&gt;<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set_alarm(seconds)<sp/>==<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deepsleep<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>seconds<sp/>==<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deepsleep<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>deepsleep<sp/>){</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hwpl_core_privcall(priv_hibernate,<sp/>NULL);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___t_i_m_e_1gac149b46cea60ad2b3538a075d91ffacb" kindref="member">powerdown</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seconds){</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>deepsleep;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>deepsleep<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>seconds<sp/>&gt;<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(set_alarm(seconds)<sp/>==<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deepsleep<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>seconds<sp/>==<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deepsleep<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>deepsleep<sp/>){</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hwpl_core_privcall(priv_powerdown,<sp/>NULL);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/time/hibernate.c"/>
  </compounddef>
</doxygen>
