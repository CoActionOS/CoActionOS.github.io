<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="group___i2_c" kind="group">
    <compoundname>I2C</compoundname>
    <title>Inter-Integrated Circuit (I2C) Master</title>
    <innerfile refid="i2c_8h">i2c.h</innerfile>
    <innerclass refid="structi2c__reqattr__t" prot="public">i2c_reqattr_t</innerclass>
    <innerclass refid="structi2c__attr__t" prot="public">i2c_attr_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group___i2_c_1ga05589fbab0657f08285ebdfe93f5ec9e" prot="public" static="no">
        <name>@13</name>
        <enumvalue id="group___i2_c_1gga05589fbab0657f08285ebdfe93f5ec9ea4b9fe6f1f00736f7579721c85433cd85" prot="public">
          <name>I2C_STATE_NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>No errors </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___i2_c_1gga05589fbab0657f08285ebdfe93f5ec9ea9bc582d4159c45394cc6c2c5dc4ad14b" prot="public">
          <name>I2C_ERROR_START</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Error while starting </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___i2_c_1gga05589fbab0657f08285ebdfe93f5ec9ea7e270c609e58ecf5bc7946ac67dfb066" prot="public">
          <name>I2C_ERROR_WRITE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Error while writing </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___i2_c_1gga05589fbab0657f08285ebdfe93f5ec9ea6b7ba78b8ad1e491de04b31ab0ffbb8e" prot="public">
          <name>I2C_ERROR_ACK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Ack Error (most common error for a mis-wired hardware) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___i2_c_1gga05589fbab0657f08285ebdfe93f5ec9ea37664a1000f758f1741ed9087903aad3" prot="public">
          <name>I2C_ERROR_STOP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Error while stopping </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___i2_c_1gga05589fbab0657f08285ebdfe93f5ec9ea2b7eecd3273ba4318b33f714fe81a140" prot="public">
          <name>I2C_ERROR_MASTER_ACK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The master could not create an ACK </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___i2_c_1gga05589fbab0657f08285ebdfe93f5ec9eaaa04dc8c79e3a0fac375e2f9447d55ee" prot="public">
          <name>I2C_ERROR_BUS_BUSY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The Bus is busy (happens with multi-masters on bus) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___i2_c_1gga05589fbab0657f08285ebdfe93f5ec9ea9d8415163d4ecfcd6484c9fcad0497f5" prot="public">
          <name>I2C_ERROR_LONG_SLEW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___i2_c_1gga05589fbab0657f08285ebdfe93f5ec9ea4ad4a8f910e34819bb7e934495c729ad" prot="public">
          <name>I2C_ERROR_ARBITRATION_LOST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Arbitration lost on multi-master bus </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___i2_c_1gga05589fbab0657f08285ebdfe93f5ec9ea37703115a79d1a057040c1a36918383b" prot="public">
          <name>I2C_STATE_RD_OP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Internal Use only </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___i2_c_1gga05589fbab0657f08285ebdfe93f5ec9ea8bf13f39fa366522a3d23a08fc707c0b" prot="public">
          <name>I2C_STATE_WR_OP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Internal Use only </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___i2_c_1gga05589fbab0657f08285ebdfe93f5ec9ea3160a906d0391441d13cc8b44068d538" prot="public">
          <name>I2C_STATE_RD_16_OP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Internal Use only </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___i2_c_1gga05589fbab0657f08285ebdfe93f5ec9ea8b66cb9ef1827bf28e992be1c5018006" prot="public">
          <name>I2C_STATE_WR_16_OP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Internal Use only </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___i2_c_1gga05589fbab0657f08285ebdfe93f5ec9eaa76e4b4b4eae4bcd26c79689ecde132c" prot="public">
          <name>I2C_ERROR_TOTAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This enumeration lists the errors which may occur when running an I2C operation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/i2c.h" line="82" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/i2c.h" bodystart="82" bodyend="97"/>
      </memberdef>
      <memberdef kind="enum" id="group___i2_c_1ga3ad96dadad63bfad13256b053c868ac3" prot="public" static="no">
        <name>i2c_transfer_t</name>
        <enumvalue id="group___i2_c_1gga3ad96dadad63bfad13256b053c868ac3a4493a827b39459a5bb65561dbf0640d3" prot="public">
          <name>I2C_TRANSFER_NORMAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This specifies the IOCTL mode value for Normal. This means <ref refid="group___u_n_i___f_i_l_e___a_c_c_e_s_s_1gaefe7609d91407014d94611912cc2b1a3" kindref="member">read()</ref> performs:<itemizedlist>
<listitem><para>Start</para></listitem><listitem><para>Write value to ptr</para></listitem><listitem><para>Restart</para></listitem><listitem><para>Read I2C data</para></listitem><listitem><para>Stop</para></listitem></itemizedlist>
</para><para>And <ref refid="group___u_n_i___f_i_l_e___a_c_c_e_s_s_1gadd30ddeed4bdbf3c96fa36970c1ca778" kindref="member">write()</ref> performs<itemizedlist>
<listitem><para>Start</para></listitem><listitem><para>Write value to ptr</para></listitem><listitem><para>Write data</para></listitem><listitem><para>Stop </para></listitem></itemizedlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___i2_c_1gga3ad96dadad63bfad13256b053c868ac3a9b2805ac15bc798f7082cb5ef4c84e3c" prot="public">
          <name>I2C_TRANSFER_NORMAL_16</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This specifies the IOCTL mode value for Normal but uses a 16-bit pointer rather than an 8-bit pointer value. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___i2_c_1gga3ad96dadad63bfad13256b053c868ac3a455447d1240251898be01a1c75e89057" prot="public">
          <name>I2C_TRANSFER_READ_ONLY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This specifies the IOCTL mode value for read only. This means the <ref refid="group___u_n_i___f_i_l_e___a_c_c_e_s_s_1gaefe7609d91407014d94611912cc2b1a3" kindref="member">read()</ref> performs:<itemizedlist>
<listitem><para>Start</para></listitem><listitem><para>Read I2C data</para></listitem><listitem><para>Stop</para></listitem></itemizedlist>
</para><para>The <ref refid="group___u_n_i___f_i_l_e___a_c_c_e_s_s_1gadd30ddeed4bdbf3c96fa36970c1ca778" kindref="member">write()</ref> function is not available in this mode. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This lists the I2C setup transfer types. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/i2c.h" line="103" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/i2c.h" bodystart="103" bodyend="130"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___i2_c_1ga17d21d2d407ad83be3a4fc495795051b" prot="public" static="no">
        <type><ref refid="structhwpl__action__t" kindref="compound">hwpl_action_t</ref></type>
        <definition>typedef hwpl_action_t i2c_action_t</definition>
        <argsstring></argsstring>
        <name>i2c_action_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This defines an I2C action. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/i2c.h" line="154" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/i2c.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___i2_c_1gac82ab28e882df97745534094745a29c0" prot="public" static="no">
        <name>I2C_IOC_IDENT_CHAR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/i2c.h" line="74" column="9" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/i2c.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i2_c_1ga1d7a706debfd958e4d9e648b7178004f" prot="public" static="no">
        <name>I2C_TEN_BIT_ADDR_MASK</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/i2c.h" line="76" column="9" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/i2c.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i2_c_1gaf05fee11ca6b7acef031e019acfdc169" prot="public" static="no">
        <name>I2C_TEN_BIT_ADDR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/i2c.h" line="77" column="9" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/i2c.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i2_c_1gaf6038303904f4036e757d39125c82b42" prot="public" static="no">
        <name>I_I2C_GETATTR</name>
        <briefdescription>
<para>This request gets the I2C attributes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/i2c.h" line="159" column="9" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/i2c.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i2_c_1ga963ce3908c1a1435a40671cb8631735c" prot="public" static="no">
        <name>I_I2C_SETATTR</name>
        <briefdescription>
<para>This request sets the I2C attributes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/i2c.h" line="164" column="9" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/i2c.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i2_c_1gae2e682283b1316ec64d69633d76b6588" prot="public" static="no">
        <name>I_I2C_SETACTION</name>
        <briefdescription>
<para>This request sets the I2C action. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/i2c.h" line="169" column="9" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/i2c.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i2_c_1ga2bc7c029d97669b7952c0b72609603be" prot="public" static="no">
        <name>I_I2C_SETUP</name>
        <briefdescription>
<para>See details below. </para>        </briefdescription>
        <detaileddescription>
<para>This ioctl request sets up an I2C transfer. The third argument is a pointer to an <ref refid="structi2c__reqattr__t" kindref="compound">i2c_reqattr_t</ref> data structure.</para><para><programlisting><codeline><highlight class="normal"><ref refid="structi2c__reqattr__t" kindref="compound">i2c_reqattr_t</ref><sp/>req;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[32];</highlight></codeline>
<codeline><highlight class="normal">req.<ref refid="structi2c__reqattr__t_1a28f623f973a312837815984d98fb1028" kindref="member">transfer</ref><sp/>=<sp/><ref refid="group___i2_c_1gga3ad96dadad63bfad13256b053c868ac3a4493a827b39459a5bb65561dbf0640d3" kindref="member">I2C_TRANSFER_NORMAL</ref>;</highlight></codeline>
<codeline><highlight class="normal">req.<ref refid="structi2c__reqattr__t_1a2c8992032c8e2ed244346157ed9cdcb7" kindref="member">slave_addr</ref><sp/>=<sp/>0x4C;</highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___u_n_i___f_i_l_e___a_c_c_e_s_s_1ga1e7463f2ee53d9da5a2ee24121aed25d" kindref="member">ioctl</ref>(i2c_fd,<sp/><ref refid="group___i2_c_1ga2bc7c029d97669b7952c0b72609603be" kindref="member">I_I2C_SETUP</ref>,<sp/>&amp;req);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___u_n_i___f_i_l_d_e_s_1ga33a233f3e6cc9e1a2b8b3f6aaea2c808" kindref="member">lseek</ref>(i2c_fd,<sp/>loc,<sp/>SEEK_SET);<sp/></highlight><highlight class="comment">//loc<sp/>is<sp/>the<sp/>location<sp/>in<sp/>the<sp/>register<sp/>map<sp/>to<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___u_n_i___f_i_l_e___a_c_c_e_s_s_1gaefe7609d91407014d94611912cc2b1a3" kindref="member">read</ref>(i2c_fd,<sp/>buf,<sp/>32);</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/i2c.h" line="186" column="9" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/i2c.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i2_c_1ga6a37788a3d02cabfaa96fa0058306cff" prot="public" static="no">
        <name>I_I2C_GETERR</name>
        <briefdescription>
<para>See details below. </para>        </briefdescription>
        <detaileddescription>
<para>This request can be used in non-blocking mode to check the error status of the last transmission. The <ref refid="group___u_n_i___f_i_l_e___a_c_c_e_s_s_1ga1e7463f2ee53d9da5a2ee24121aed25d" kindref="member">ioctl()</ref> returns the error value. The ctl argument is NULL for this request. <programlisting><codeline><highlight class="normal">err<sp/>=<sp/><ref refid="group___u_n_i___f_i_l_e___a_c_c_e_s_s_1ga1e7463f2ee53d9da5a2ee24121aed25d" kindref="member">ioctl</ref>(i2c_fd,<sp/><ref refid="group___i2_c_1ga6a37788a3d02cabfaa96fa0058306cff" kindref="member">I_I2C_GETERR</ref>);</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/i2c.h" line="199" column="9" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/i2c.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i2_c_1ga7d5f7e51d94685a568b51ef33fb39099" prot="public" static="no">
        <name>I_I2C_TOTAL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/i2c.h" line="201" column="9" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/i2c.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This module implements an I2C multi-master using two GPIO pins and a pin change interrupt. More information about accessing peripheral IO is in the <ref refid="group___p_e_r_i_p_h_i_o" kindref="compound">Peripheral Input/Output</ref> section.</para><para>The following is an example of how to write the I2C in an OS environment: <programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hwpl_8h" kindref="compound">hwpl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>access_i2c(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="structi2c__attr__t" kindref="compound">i2c_attr_t</ref><sp/>attr;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="structi2c__reqattr__t" kindref="compound">i2c_reqattr_t</ref><sp/>req;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>data[8];</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>fd<sp/>=<sp/><ref refid="group___u_n_i___f_i_l_e___a_c_c_e_s_s_1gac843f2e35e60c3bbf1da47d84306f29b" kindref="member">open</ref>(</highlight><highlight class="stringliteral">&quot;/dev/i2c0&quot;</highlight><highlight class="normal">,<sp/>O_RDWR);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fd<sp/>&lt;<sp/>0<sp/>){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error<sp/>opening<sp/>peripheral<sp/>(%d)\n&quot;</highlight><highlight class="normal">,<sp/>errno);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>attr.<ref refid="structi2c__attr__t_1a7f58e2df0c6afe57de0c300ce21efd8e" kindref="member">bitrate</ref><sp/>=<sp/>4000000;<sp/></highlight><highlight class="comment">//Use<sp/>a<sp/>400KHz<sp/>I2C<sp/>clock<sp/>frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attr.<ref refid="structi2c__attr__t_1adf893113064e15c2469cc206697bcc46" kindref="member">pin_assign</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//Use<sp/>GPIO<sp/>configuration<sp/>zero<sp/>(see<sp/>device<sp/>specific<sp/>documentation<sp/>for<sp/>details)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="group___u_n_i___f_i_l_e___a_c_c_e_s_s_1ga1e7463f2ee53d9da5a2ee24121aed25d" kindref="member">ioctl</ref>(fd,<sp/>I_SETATTR,<sp/>&amp;attr)<sp/>&lt;<sp/>0<sp/>){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>peripheral<sp/>configuration<sp/>(%d)\n&quot;</highlight><highlight class="normal">,<sp/>errno);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Now<sp/>use<sp/>ioctl<sp/>to<sp/>setup<sp/>a<sp/>transfer<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>req.<ref refid="structi2c__reqattr__t_1a2c8992032c8e2ed244346157ed9cdcb7" kindref="member">slave_addr</ref><sp/>=<sp/>0x3F;<sp/></highlight><highlight class="comment">//This<sp/>is<sp/>the<sp/>right-justified<sp/>7-bit<sp/>or<sp/>10-bit<sp/>slave<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>req.<ref refid="structi2c__reqattr__t_1a28f623f973a312837815984d98fb1028" kindref="member">transfer</ref><sp/>=<sp/><ref refid="group___i2_c_1gga3ad96dadad63bfad13256b053c868ac3a4493a827b39459a5bb65561dbf0640d3" kindref="member">I2C_TRANSFER_NORMAL</ref>;<sp/></highlight><highlight class="comment">//This<sp/>is<sp/>a<sp/>&quot;normal&quot;,<sp/>see<sp/>i2c_trasfer_mode_t<sp/>for<sp/>details</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_n_i___f_i_l_e___a_c_c_e_s_s_1ga1e7463f2ee53d9da5a2ee24121aed25d" kindref="member">ioctl</ref>(fd,<sp/><ref refid="group___i2_c_1ga2bc7c029d97669b7952c0b72609603be" kindref="member">I_I2C_SETUP</ref>,<sp/>&amp;req);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>read<sp/>the<sp/>I2C:<sp/><sp/>This<sp/>will<sp/>1)<sp/>Start<sp/>2)<sp/>write<sp/>the<sp/>8-bit<sp/>ptr<sp/>value<sp/>3)<sp/>Restart<sp/>4)<sp/>Read<sp/>8<sp/>bytes<sp/>and<sp/>5)<sp/>Stop</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_n_i___f_i_l_d_e_s_1ga33a233f3e6cc9e1a2b8b3f6aaea2c808" kindref="member">lseek</ref>(fd,<sp/>0,<sp/>SEEK_SET);<sp/></highlight><highlight class="comment">//this<sp/>is<sp/>the<sp/>ptr<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="group___u_n_i___f_i_l_e___a_c_c_e_s_s_1gaefe7609d91407014d94611912cc2b1a3" kindref="member">read</ref>(fd,<sp/>data,<sp/>8)<sp/>&lt;<sp/>0<sp/>){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error<sp/>Reading<sp/>adc0<sp/>(%d)\n&quot;</highlight><highlight class="normal">&lt;<sp/>errno);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_n_i___f_i_l_e___a_c_c_e_s_s_1gaacad1d135ca2779b583623678e36db7c" kindref="member">close</ref>(fd);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>    </detaileddescription>
  </compounddef>
</doxygen>
