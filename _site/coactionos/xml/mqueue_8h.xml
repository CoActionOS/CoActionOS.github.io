<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="mqueue_8h" kind="file">
    <compoundname>mqueue.h</compoundname>
    <includes local="no">sys/types.h</includes>
    <includes local="no">signal.h</includes>
    <includes local="no">limits.h</includes>
    <includedby refid="mqueue_8c" local="yes">/Users/tgil/git/CoActionOS/CoActionOS/src/sys/mqueue/mqueue.c</includedby>
    <incdepgraph>
      <node id="1938">
        <label>limits.h</label>
      </node>
      <node id="1936">
        <label>sys/types.h</label>
      </node>
      <node id="1935">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/include/mqueue.h</label>
        <link refid="mqueue.h"/>
        <childnode refid="1936" relation="include">
        </childnode>
        <childnode refid="1937" relation="include">
        </childnode>
        <childnode refid="1938" relation="include">
        </childnode>
      </node>
      <node id="1937">
        <label>signal.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1940">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/mqueue/mqueue.c</label>
        <link refid="mqueue_8c"/>
      </node>
      <node id="1939">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/include/mqueue.h</label>
        <link refid="mqueue.h"/>
        <childnode refid="1940" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structmq__attr" prot="public">mq_attr</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="mqueue_8h_1ad1516b4f64b6dc890b1fa3bf576bfef9" prot="public" static="no">
        <name>MQ_PRIO_MAX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This defines the maximum priority that can be assigned to a message. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/mqueue.h" line="35" column="9" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/mqueue.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="mqueue_8h_1a29c128063eb818406bae68534b609c86" prot="public" static="no">
        <type>ssize_t</type>
        <definition>typedef ssize_t mqd_t</definition>
        <argsstring></argsstring>
        <name>mqd_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is the message queue handler type. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/mqueue.h" line="20" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/mqueue.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___m_q_u_e_u_e_1ga5a55ce03d8466a53a36601aaca9ee328" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mq_getattr</definition>
        <argsstring>(mqd_t mqdes, struct mq_attr *mqstat)</argsstring>
        <name>mq_getattr</name>
        <param>
          <type>mqd_t</type>
          <declname>mqdes</declname>
        </param>
        <param>
          <type>struct <ref refid="structmq__attr" kindref="compound">mq_attr</ref> *</type>
          <declname>mqstat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function gets the message queue attributes and stores them at <emphasis>mqstat</emphasis>.</para><para><simplesect kind="return"><para>Zero on success or -1 with errno (see <ref refid="group___e_r_r_n_o" kindref="compound">Error Numbers</ref>) set to:<itemizedlist>
<listitem><para>EBADF: <emphasis>mqdes</emphasis> is not a valid message queue descriptor </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/mqueue.h" line="38" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/mqueue/mqueue.c" bodystart="195" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="group___m_q_u_e_u_e_1ga83b7aa93cb6f1f5a4fd938baea5579a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mq_setattr</definition>
        <argsstring>(mqd_t mqdes, const struct mq_attr *mqstat, struct mq_attr *omqstat)</argsstring>
        <name>mq_setattr</name>
        <param>
          <type>mqd_t</type>
          <declname>mqdes</declname>
        </param>
        <param>
          <type>const struct <ref refid="structmq__attr" kindref="compound">mq_attr</ref> *</type>
          <declname>mqstat</declname>
        </param>
        <param>
          <type>struct <ref refid="structmq__attr" kindref="compound">mq_attr</ref> *</type>
          <declname>omqstat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is not supported.</para><para><simplesect kind="return"><para>Zero on success or -1 with errno (see <ref refid="group___e_r_r_n_o" kindref="compound">Error Numbers</ref>) set to:<itemizedlist>
<listitem><para>ENOTSUP </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/mqueue.h" line="39" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/mqueue/mqueue.c" bodystart="227" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="group___m_q_u_e_u_e_1gaf5d8bf423701bd1783849119511381a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>mqd_t</type>
        <definition>mqd_t mq_open</definition>
        <argsstring>(const char *name, int oflag,...)</argsstring>
        <name>mq_open</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
          <briefdescription><para>the full path to the message queue </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>oflag</declname>
          <briefdescription><para>the flags used for opening the message queue </para></briefdescription>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function opens or creates a new message queue.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the message queue </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oflag</parametername>
</parameternamelist>
<parameterdescription>
<para>The flags to use when opening (O_CREAT, O_EXCL, O_RDWR, O_RDONLY) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>The access mode settings for the queue </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>The message queue attributes</para></parameterdescription>
</parameteritem>
</parameterlist>
If using O_CREAT, the following prototype is used: <programlisting><codeline><highlight class="normal">mqd_t<sp/><ref refid="group___m_q_u_e_u_e_1gaf5d8bf423701bd1783849119511381a5" kindref="member">mq_open</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oflag,<sp/>mode_t<sp/>mode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmq__attr" kindref="compound">mq_attr</ref><sp/>*<sp/>attr);</highlight></codeline>
</programlisting></para><para><simplesect kind="return"><para>Zero on success or -1 with errno (see <ref refid="group___e_r_r_n_o" kindref="compound">Error Numbers</ref>) set to:<itemizedlist>
<listitem><para>ENAMETOOLONG: <emphasis>name</emphasis> length is greater than NAME_MAX</para></listitem><listitem><para>EEXIST: O_CREAT and O_EXCL are set in <emphasis>oflag</emphasis> but the queue already exists</para></listitem><listitem><para>ENOENT: O_CREAT is not set in <emphasis>oflag</emphasis> and the queue does not exist</para></listitem><listitem><para>ENOMEM: not enough memory for the queue</para></listitem><listitem><para>EACCES: permission to create <emphasis>name</emphasis> queue is denied</para></listitem><listitem><para>EINVAL: O_CREAT is set and <emphasis>attr</emphasis> is not null but <emphasis>mq_maxmsg</emphasis> or <emphasis>mq_msgsize</emphasis> is less than or equal to zero </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/mqueue.h" line="41" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/mqueue/mqueue.c" bodystart="255" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="group___m_q_u_e_u_e_1ga3fbd3906296be63451c64d69be2bc371" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mq_close</definition>
        <argsstring>(mqd_t mqdes)</argsstring>
        <name>mq_close</name>
        <param>
          <type>mqd_t</type>
          <declname>mqdes</declname>
          <briefdescription><para>the message queue handler </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function closes the message queue.</para><para><simplesect kind="return"><para>Zero on success or -1 with errno (see <ref refid="group___e_r_r_n_o" kindref="compound">Error Numbers</ref>) set to:<itemizedlist>
<listitem><para>EBADF: <emphasis>mqdes</emphasis> is not a valid descriptor </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/mqueue.h" line="42" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/mqueue/mqueue.c" bodystart="365" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="group___m_q_u_e_u_e_1gaccd8c5ee36e60d990963e1d544ef4140" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mq_unlink</definition>
        <argsstring>(const char *name)</argsstring>
        <name>mq_unlink</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
          <briefdescription><para>the full path to the message queue </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function deletes a message queue if no other processes have it open. If another process has the queue open, the queue will be deleted when said process closes the queue using <ref refid="group___m_q_u_e_u_e_1ga3fbd3906296be63451c64d69be2bc371" kindref="member">mq_close()</ref>.</para><para><simplesect kind="return"><para>Zero on success or -1 with errno (see <ref refid="group___e_r_r_n_o" kindref="compound">Error Numbers</ref>) set to:<itemizedlist>
<listitem><para>ENAMETOOLONG: length of <emphasis>name</emphasis> exceeds NAME_MAX</para></listitem><listitem><para>EACCES: write permission to <emphasis>name</emphasis> is denied</para></listitem><listitem><para>ENOENT: the queue does not exist</para></listitem><listitem><para>EIO: I/O error while deleting the queue </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/mqueue.h" line="43" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/mqueue/mqueue.c" bodystart="401" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="group___m_q_u_e_u_e_1ga5eadbb82e0b9702d77f384a27827b334" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mq_notify</definition>
        <argsstring>(mqd_t mqdes, const struct sigevent *notification)</argsstring>
        <name>mq_notify</name>
        <param>
          <type>mqd_t</type>
          <declname>mqdes</declname>
        </param>
        <param>
          <type>const struct sigevent *</type>
          <declname>notification</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is not supported.</para><para><simplesect kind="return"><para>Zero on success or -1 with errno (see <ref refid="group___e_r_r_n_o" kindref="compound">Error Numbers</ref>) set to:<itemizedlist>
<listitem><para>ENOTSUP: feature is not supported </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/mqueue.h" line="45" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/mqueue/mqueue.c" bodystart="432" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="group___m_q_u_e_u_e_1ga98eea38b09dabab5144afcaf109c82cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t mq_receive</definition>
        <argsstring>(mqd_t mqdes, char *msg_ptr, size_t msg_len, unsigned *msg_prio)</argsstring>
        <name>mq_receive</name>
        <param>
          <type>mqd_t</type>
          <declname>mqdes</declname>
          <briefdescription><para>the message queue handle </para></briefdescription>
        </param>
        <param>
          <type>char *</type>
          <declname>msg_ptr</declname>
          <briefdescription><para>a pointer to the destination memory for the message </para></briefdescription>
        </param>
        <param>
          <type>size_t</type>
          <declname>msg_len</declname>
          <briefdescription><para>the number of bytes available in <emphasis>msg_ptr</emphasis> (must be at least the size of the message size) </para></briefdescription>
        </param>
        <param>
          <type>unsigned *</type>
          <declname>msg_prio</declname>
          <briefdescription><para>if not NULL, the priority of the received message is stored here </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function removes a message from the queue and stores the message at <emphasis>msg_ptr</emphasis>.</para><para><simplesect kind="return"><para>Zero on success or -1 with errno (see <ref refid="group___e_r_r_n_o" kindref="compound">Error Numbers</ref>) set to:<itemizedlist>
<listitem><para>EAGAIN: no message on the queue and O_NONBLOCK is set in the descriptor flags</para></listitem><listitem><para>EIO: I/O error while accessing the queue</para></listitem><listitem><para>EMSGSIZE: <emphasis>msg_len</emphasis> is less than the message size of the queue</para></listitem><listitem><para>EBADF: <emphasis>mqdes</emphasis> is not a valid message queue descriptor </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/mqueue.h" line="47" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/mqueue/mqueue.c" bodystart="449" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="group___m_q_u_e_u_e_1gaabb697e0e23bb8c4430091c5e1b58eaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t mq_timedreceive</definition>
        <argsstring>(mqd_t mqdes, char *msg_ptr, size_t msg_len, unsigned *msg_prio, const struct timespec *abs_timeout)</argsstring>
        <name>mq_timedreceive</name>
        <param>
          <type>mqd_t</type>
          <declname>mqdes</declname>
          <briefdescription><para>see <ref refid="group___m_q_u_e_u_e_1ga98eea38b09dabab5144afcaf109c82cd" kindref="member">mq_receive()</ref> </para></briefdescription>
        </param>
        <param>
          <type>char *</type>
          <declname>msg_ptr</declname>
          <briefdescription><para>see <ref refid="group___m_q_u_e_u_e_1ga98eea38b09dabab5144afcaf109c82cd" kindref="member">mq_receive()</ref> </para></briefdescription>
        </param>
        <param>
          <type>size_t</type>
          <declname>msg_len</declname>
          <briefdescription><para>see <ref refid="group___m_q_u_e_u_e_1ga98eea38b09dabab5144afcaf109c82cd" kindref="member">mq_receive()</ref> </para></briefdescription>
        </param>
        <param>
          <type>unsigned *</type>
          <declname>msg_prio</declname>
          <briefdescription><para>see <ref refid="group___m_q_u_e_u_e_1ga98eea38b09dabab5144afcaf109c82cd" kindref="member">mq_receive()</ref> </para></briefdescription>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>abs_timeout</declname>
          <briefdescription><para>the absolute timeout value </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function removes a message from the queue and stores the message at <emphasis>msg_ptr</emphasis>. If no messages are available, the thread is blocked until either a messsage is available or the value of <emphasis>CLOCK_REALTIME</emphasis> is less then <emphasis>abs_timeout</emphasis>.</para><para>If O_NONBLOCK is set in <emphasis>mqdes</emphasis>, the function returns immediately whether a message is ready or not.</para><para><simplesect kind="return"><para>Zero on success or -1 with errno (see <ref refid="group___e_r_r_n_o" kindref="compound">Error Numbers</ref>) set to:<itemizedlist>
<listitem><para>EAGAIN: no message on the queue and O_NONBLOCK is set in the descriptor flags</para></listitem><listitem><para>EIO: I/O error while accessing the queue</para></listitem><listitem><para>ETIMEDOUT: <emphasis>abs_timeout</emphasis> was exceeded by <emphasis>CLOCK_REALTIME</emphasis> </para></listitem><listitem><para>EMSGSIZE: <emphasis>msg_len</emphasis> is less than the message size of the queue</para></listitem><listitem><para>EBADF: <emphasis>mqdes</emphasis> is not a valid message queue descriptor </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/mqueue.h" line="48" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/mqueue/mqueue.c" bodystart="532" bodyend="581"/>
      </memberdef>
      <memberdef kind="function" id="group___m_q_u_e_u_e_1ga753177f77f6eec2a80b57e8a68b36bed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mq_send</definition>
        <argsstring>(mqd_t mqdes, const char *msg_ptr, size_t msg_len, unsigned msg_prio)</argsstring>
        <name>mq_send</name>
        <param>
          <type>mqd_t</type>
          <declname>mqdes</declname>
          <briefdescription><para>the message queue handle </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg_ptr</declname>
          <briefdescription><para>a pointer to the message to be sent </para></briefdescription>
        </param>
        <param>
          <type>size_t</type>
          <declname>msg_len</declname>
          <briefdescription><para>the message size (must be less than or equal to <emphasis>mq_msgsize</emphasis> associated with <emphasis>mqdes</emphasis> </para></briefdescription>
        </param>
        <param>
          <type>unsigned</type>
          <declname>msg_prio</declname>
          <briefdescription><para>the priority of the message (see MQ_PRIO_MAX) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function sends a message pointed to by <emphasis>msg_ptr</emphasis>. If there is no room in the queue (and O_NONBLOCK is not set in <emphasis>mqdes</emphasis>), the thread is blocked until a message is removed from the queue.</para><para>If O_NONBLOCK is set in <emphasis>mqdes</emphasis>, the function returns immediately whether a message is sent or not.</para><para><simplesect kind="return"><para>Zero on success or -1 with errno (see <ref refid="group___e_r_r_n_o" kindref="compound">Error Numbers</ref>) set to:<itemizedlist>
<listitem><para>EAGAIN: no room on the queue and O_NONBLOCK is set in the descriptor flags</para></listitem><listitem><para>EIO: I/O error while accessing the queue</para></listitem><listitem><para>EBADF: <emphasis>mqdes</emphasis> is not a valid message queue descriptor </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/mqueue.h" line="49" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/mqueue/mqueue.c" bodystart="596" bodyend="601"/>
      </memberdef>
      <memberdef kind="function" id="group___m_q_u_e_u_e_1gae456506b982aed3a6e621ed74c25e1f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mq_timedsend</definition>
        <argsstring>(mqd_t mqdes, const char *msg_ptr, size_t msg_len, unsigned msg_prio, const struct timespec *abs_timeout)</argsstring>
        <name>mq_timedsend</name>
        <param>
          <type>mqd_t</type>
          <declname>mqdes</declname>
          <briefdescription><para>see <ref refid="group___m_q_u_e_u_e_1ga753177f77f6eec2a80b57e8a68b36bed" kindref="member">mq_send()</ref> </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg_ptr</declname>
          <briefdescription><para>see <ref refid="group___m_q_u_e_u_e_1ga753177f77f6eec2a80b57e8a68b36bed" kindref="member">mq_send()</ref> </para></briefdescription>
        </param>
        <param>
          <type>size_t</type>
          <declname>msg_len</declname>
          <briefdescription><para>see <ref refid="group___m_q_u_e_u_e_1ga753177f77f6eec2a80b57e8a68b36bed" kindref="member">mq_send()</ref> </para></briefdescription>
        </param>
        <param>
          <type>unsigned</type>
          <declname>msg_prio</declname>
          <briefdescription><para>see <ref refid="group___m_q_u_e_u_e_1ga753177f77f6eec2a80b57e8a68b36bed" kindref="member">mq_send()</ref> </para></briefdescription>
        </param>
        <param>
          <type>const struct timespec *</type>
          <declname>abs_timeout</declname>
          <briefdescription><para>the absolute timeout value </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function sends a message pointed to by <emphasis>msg_ptr</emphasis>. If there is no room in the queue (and O_NONBLOCK is not set in <emphasis>mqdes</emphasis>), the thread is blocked until a message is removed from the queue or until the value of <emphasis>CLOCK_REALTIME</emphasis> exceeds <emphasis>abs_timeout</emphasis>.</para><para>If O_NONBLOCK is set in <emphasis>mqdes</emphasis>, the function returns immediately whether a message is sent or not.</para><para><simplesect kind="return"><para>Zero on success or -1 with errno (see <ref refid="group___e_r_r_n_o" kindref="compound">Error Numbers</ref>) set to:<itemizedlist>
<listitem><para>EAGAIN: no message on the queue and O_NONBLOCK is set in the descriptor flags</para></listitem><listitem><para>EIO: I/O error while accessing the queue</para></listitem><listitem><para>ETIMEDOUT: <emphasis>abs_timeout</emphasis> was exceeded by <emphasis>CLOCK_REALTIME</emphasis> </para></listitem><listitem><para>EBADF: <emphasis>mqdes</emphasis> is not a valid message queue descriptor </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/mqueue.h" line="50" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/mqueue/mqueue.c" bodystart="647" bodyend="703"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Copyright<sp/>2011;<sp/>All<sp/>Rights<sp/>Reserved</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Please<sp/>see<sp/>http://www.coactionos.com/license.html<sp/>for</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>licensing<sp/>information.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MQUEUE_H_</highlight></codeline>
<codeline lineno="7"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>MQUEUE_H_</highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="20"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>ssize_t<sp/>mqd_t;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="structmq__attr" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmq__attr" kindref="compound">mq_attr</ref><sp/>{</highlight></codeline>
<codeline lineno="26" refid="structmq__attr_1a19c05fa88c6d1126120d800647ddb0dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structmq__attr_1a19c05fa88c6d1126120d800647ddb0dd" kindref="member">mq_flags</ref><sp/>;</highlight></codeline>
<codeline lineno="27" refid="structmq__attr_1aa535e1fa6c07c1d189e720ba15f9af08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structmq__attr_1aa535e1fa6c07c1d189e720ba15f9af08" kindref="member">mq_maxmsg</ref><sp/>;</highlight></codeline>
<codeline lineno="28" refid="structmq__attr_1ae975d1d907081c1e53b079c981c32209" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structmq__attr_1ae975d1d907081c1e53b079c981c32209" kindref="member">mq_msgsize</ref><sp/>;</highlight></codeline>
<codeline lineno="29" refid="structmq__attr_1a08cfd508cef817ba351c1af8d9af50f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structmq__attr_1a08cfd508cef817ba351c1af8d9af50f5" kindref="member">mq_curmsgs</ref><sp/>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor">#define<sp/>MQ_PRIO_MAX<sp/>INT_MAX</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___m_q_u_e_u_e_1ga5a55ce03d8466a53a36601aaca9ee328" kindref="member">mq_getattr</ref>(mqd_t<sp/>mqdes,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmq__attr" kindref="compound">mq_attr</ref><sp/>*mqstat);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___m_q_u_e_u_e_1ga83b7aa93cb6f1f5a4fd938baea5579a6" kindref="member">mq_setattr</ref>(mqd_t<sp/>mqdes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmq__attr" kindref="compound">mq_attr</ref><sp/>*<sp/>mqstat,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmq__attr" kindref="compound">mq_attr</ref><sp/>*<sp/>omqstat);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">mqd_t<sp/><ref refid="group___m_q_u_e_u_e_1gaf5d8bf423701bd1783849119511381a5" kindref="member">mq_open</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oflag,<sp/>...);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___m_q_u_e_u_e_1ga3fbd3906296be63451c64d69be2bc371" kindref="member">mq_close</ref>(mqd_t<sp/>mqdes);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___m_q_u_e_u_e_1gaccd8c5ee36e60d990963e1d544ef4140" kindref="member">mq_unlink</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>name);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___m_q_u_e_u_e_1ga5eadbb82e0b9702d77f384a27827b334" kindref="member">mq_notify</ref>(mqd_t<sp/>mqdes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sigevent<sp/>*notification);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">ssize_t<sp/><ref refid="group___m_q_u_e_u_e_1ga98eea38b09dabab5144afcaf109c82cd" kindref="member">mq_receive</ref>(mqd_t<sp/>mqdes,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>msg_ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>msg_len,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>*<sp/>msg_prio);</highlight></codeline>
<codeline lineno="48"><highlight class="normal">ssize_t<sp/><ref refid="group___m_q_u_e_u_e_1gaabb697e0e23bb8c4430091c5e1b58eaf" kindref="member">mq_timedreceive</ref>(mqd_t<sp/>mqdes,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>msg_ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>msg_len,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>*<sp/>msg_prio,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*<sp/>abs_timeout);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___m_q_u_e_u_e_1ga753177f77f6eec2a80b57e8a68b36bed" kindref="member">mq_send</ref>(mqd_t<sp/>mqdes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>msg_ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>msg_len,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>msg_prio);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___m_q_u_e_u_e_1gae456506b982aed3a6e621ed74c25e1f7" kindref="member">mq_timedsend</ref>(mqd_t<sp/>mqdes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>msg_ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>msg_len,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>msg_prio,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*<sp/>abs_timeout);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MQUEUE_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/mqueue.h"/>
  </compounddef>
</doxygen>
