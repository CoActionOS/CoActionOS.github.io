<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="group___e_i_n_t" kind="group">
    <compoundname>EINT</compoundname>
    <title>External Interrupts (EINT)</title>
    <innerfile refid="eint_8h">eint.h</innerfile>
    <innerclass refid="structeint__attr__t" prot="public">eint_attr_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group___e_i_n_t_1gadd1257260f1ba401df43dd34fa2d28d5" prot="public" static="no">
        <name>eint_action_event_t</name>
        <enumvalue id="group___e_i_n_t_1ggadd1257260f1ba401df43dd34fa2d28d5a7f362899eaa0583dccbdea0bbaf8f5a1" prot="public">
          <name>EINT_ACTION_EVENT_UNCONFIGURED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The trigger has not been set </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_i_n_t_1ggadd1257260f1ba401df43dd34fa2d28d5a019f0c7c523b3f04b4a0e4905f31e848" prot="public">
          <name>EINT_ACTION_EVENT_RISING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger on the rising edge </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_i_n_t_1ggadd1257260f1ba401df43dd34fa2d28d5a91493ba0ea96049f046b9cfeebf42d81" prot="public">
          <name>EINT_ACTION_EVENT_FALLING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger on the falling edge </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_i_n_t_1ggadd1257260f1ba401df43dd34fa2d28d5aaab3f9601e94feb16265e6512ff683f4" prot="public">
          <name>EINT_ACTION_EVENT_BOTH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger on both edges </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_i_n_t_1ggadd1257260f1ba401df43dd34fa2d28d5ac72b8d7c05b72a3917fd88c51a084146" prot="public">
          <name>EINT_ACTION_EVENT_LOW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger while low </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___e_i_n_t_1ggadd1257260f1ba401df43dd34fa2d28d5aa169884effda9ecad418a5dab0f1ec40" prot="public">
          <name>EINT_ACTION_EVENT_HIGH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trigger while high </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Lists the valid values for the external interrupt trigger. </para>        </briefdescription>
        <detaileddescription>
<para>This list defines the valid values for the external interrupt trigger value. <simplesect kind="return"><para>An HWPL Error code </para></simplesect>
<simplesect kind="see"><para>ERR </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/eint.h" line="86" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/eint.h" bodystart="86" bodyend="93"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___e_i_n_t_1ga08630207822833a28b4f31d67bf75248" prot="public" static="no">
        <type><ref refid="structhwpl__action__t" kindref="compound">hwpl_action_t</ref></type>
        <definition>typedef hwpl_action_t eint_action_t</definition>
        <argsstring></argsstring>
        <name>eint_action_t</name>
        <briefdescription>
<para>See below for details. </para>        </briefdescription>
        <detaileddescription>
<para>This defines a EINT action.</para><para>See <ref refid="group___e_i_n_t_1gadd1257260f1ba401df43dd34fa2d28d5" kindref="member">eint_action_event_t</ref> for events. There are no channel specific definitions for the EINT. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/eint.h" line="102" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/eint.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___e_i_n_t_1gac87fa334c3271ac180aedf8a1bac838f" prot="public" static="no">
        <name>EINT_IOC_IDENT_CHAR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/eint.h" line="78" column="9" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/eint.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_i_n_t_1gaf63454446a977fa24c3b4501e096ef90" prot="public" static="no">
        <name>I_EINT_GETATTR</name>
        <briefdescription>
<para>IOCTL request to get attributes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/eint.h" line="115" column="9" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/eint.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_i_n_t_1ga8ffe868c1b9a048d4a422102bb0d0494" prot="public" static="no">
        <name>I_EINT_SETATTR</name>
        <briefdescription>
<para>IOCTL request to set the attributes (set pin assignment) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/eint.h" line="119" column="9" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/eint.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_i_n_t_1gafafdc3233a44f8e060b32de3560ffae8" prot="public" static="no">
        <name>I_EINT_SETACTION</name>
        <briefdescription>
<para>See below for details. </para>        </briefdescription>
        <detaileddescription>
<para>This sets the action for an EINT channel. For example: <programlisting><codeline><highlight class="normal"><ref refid="structhwpl__action__t" kindref="compound">eint_action_t</ref><sp/>action;</highlight></codeline>
<codeline><highlight class="normal">action.<ref refid="structhwpl__action__t_1ad64a81f8794209690a58c5edea69a670" kindref="member">channel</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//channel<sp/>if<sp/>used<sp/>on<sp/>the<sp/>architecture</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">action.<ref refid="structhwpl__action__t_1a93110fca833bdac575232fe9e86ce521" kindref="member">callback</ref><sp/>=<sp/>my_callback;<sp/></highlight><highlight class="comment">//function<sp/>to<sp/>execute<sp/>when<sp/>event<sp/>happens</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">action.<ref refid="structhwpl__action__t_1a696aef4afa2abe4e4b4fb72b1db27c0b" kindref="member">context</ref><sp/>=<sp/>NULL;<sp/><sp/></highlight><highlight class="comment">//passed<sp/>to<sp/>my_callback<sp/>as<sp/>first<sp/>argument</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">action.<ref refid="structhwpl__action__t_1a135a14bbc27b1ea33cfaee0dc8302740" kindref="member">event</ref><sp/>=<sp/><ref refid="group___e_i_n_t_1ggadd1257260f1ba401df43dd34fa2d28d5a019f0c7c523b3f04b4a0e4905f31e848" kindref="member">EINT_ACTION_EVENT_RISING</ref>;<sp/></highlight><highlight class="comment">//Trigger<sp/>on<sp/>rising<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___u_n_i___f_i_l_e___a_c_c_e_s_s_1ga1e7463f2ee53d9da5a2ee24121aed25d" kindref="member">ioctl</ref>(eint_fd,<sp/><ref refid="group___e_i_n_t_1gafafdc3233a44f8e060b32de3560ffae8" kindref="member">I_EINT_SETACTION</ref>,<sp/>&amp;action);</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/eint.h" line="132" column="9" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/eint.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_i_n_t_1gad92edee8d4c27c9082e56369fc05acff" prot="public" static="no">
        <name>I_EINT_TOTAL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/eint.h" line="134" column="9" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/dev/eint.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The External Interrupt API allows the user to configure how the external interrupts pins trigger IRQs.</para><para>The following is an example of how to use the EINT in an OS environment:</para><para><programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hwpl_8h" kindref="compound">hwpl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>my_eint_action(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>context,<sp/>uint32_t<sp/>value){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//take<sp/>some<sp/>action<sp/>on<sp/>an<sp/>eint<sp/>event<sp/>--<sp/>this<sp/>runs<sp/>in<sp/>priveleged,<sp/>handler<sp/>mode,<sp/>it<sp/>should<sp/>be<sp/>fast<sp/>and<sp/>short</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>configure_eint(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="structeint__attr__t" kindref="compound">eint_attr_t</ref><sp/>attr;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="structhwpl__action__t" kindref="compound">eint_action_t</ref><sp/>action;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>fd<sp/>=<sp/><ref refid="group___u_n_i___f_i_l_e___a_c_c_e_s_s_1gac843f2e35e60c3bbf1da47d84306f29b" kindref="member">open</ref>(</highlight><highlight class="stringliteral">&quot;/dev/eint0&quot;</highlight><highlight class="normal">,<sp/>O_RDWR);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fd<sp/>&lt;<sp/>0<sp/>){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error<sp/>opening<sp/>peripheral<sp/>(%d)\n&quot;</highlight><highlight class="normal">,<sp/>errno);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>attr.<ref refid="structeint__attr__t_1a29a20d1250f75e808af5b5b876027ea2" kindref="member">pin_assign</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="group___u_n_i___f_i_l_e___a_c_c_e_s_s_1ga1e7463f2ee53d9da5a2ee24121aed25d" kindref="member">ioctl</ref>(fd,<sp/>I_SETATTR,<sp/>&amp;ctl)<sp/>&lt;<sp/>0<sp/>){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>peripheral<sp/>configuration<sp/>(%d)\n&quot;</highlight><highlight class="normal">,<sp/>errno);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Now<sp/>set<sp/>an<sp/>action<sp/>to<sp/>take<sp/>when<sp/>a<sp/>falling<sp/>edge<sp/>occurs<sp/>on<sp/>eint0</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>action.<ref refid="structhwpl__action__t_1ad64a81f8794209690a58c5edea69a670" kindref="member">channel</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//unused</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>action.<ref refid="structhwpl__action__t_1a135a14bbc27b1ea33cfaee0dc8302740" kindref="member">event</ref><sp/>=<sp/><ref refid="group___e_i_n_t_1ggadd1257260f1ba401df43dd34fa2d28d5a91493ba0ea96049f046b9cfeebf42d81" kindref="member">EINT_ACTION_EVENT_FALLING</ref>;<sp/></highlight><highlight class="comment">//no<sp/>events<sp/>are<sp/>defined<sp/>for<sp/>the<sp/>EINT</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>action.<ref refid="structhwpl__action__t_1a93110fca833bdac575232fe9e86ce521" kindref="member">callback</ref><sp/>=<sp/>my_eint_action;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>action.<ref refid="structhwpl__action__t_1a696aef4afa2abe4e4b4fb72b1db27c0b" kindref="member">context</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="group___u_n_i___f_i_l_e___a_c_c_e_s_s_1ga1e7463f2ee53d9da5a2ee24121aed25d" kindref="member">ioctl</ref>(fd,<sp/>I_SETACTION,<sp/>&amp;action)<sp/>){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error<sp/>setting<sp/>action<sp/>for<sp/>peripheral<sp/>(%d)\n&quot;</highlight><highlight class="normal">,<sp/>errno);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_n_i___f_i_l_e___a_c_c_e_s_s_1gaacad1d135ca2779b583623678e36db7c" kindref="member">close</ref>(fd);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>    </detaileddescription>
  </compounddef>
</doxygen>
