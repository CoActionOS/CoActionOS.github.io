<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="pthread__mutexattr_8c" kind="file">
    <compoundname>pthread_mutexattr.c</compoundname>
    <includes refid="config_8h" local="yes">config.h</includes>
    <includes local="no">pthread.h</includes>
    <includes local="no">errno.h</includes>
    <incdepgraph>
      <node id="2210">
        <label>errno.h</label>
      </node>
      <node id="2209">
        <label>pthread.h</label>
      </node>
      <node id="2208">
        <label>config.h</label>
        <link refid="config_8h"/>
      </node>
      <node id="2207">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_mutexattr.c</label>
        <link refid="pthread_mutexattr.c"/>
        <childnode refid="2208" relation="include">
        </childnode>
        <childnode refid="2209" relation="include">
        </childnode>
        <childnode refid="2210" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___p_t_h_r_e_a_d___m_u_t_e_x_1gaa394b0b9cef3e094442addce172d0809" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_mutexattr_check_initialized</definition>
        <argsstring>(const pthread_mutexattr_t *attr)</argsstring>
        <name>pthread_mutexattr_check_initialized</name>
        <param>
          <type>const pthread_mutexattr_t *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_mutexattr.c" line="20" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_mutexattr_init.c" bodystart="60" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="group___p_t_h_r_e_a_d___m_u_t_e_x_1gaa3e933279a6bea662232701ba134d0bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_mutexattr_getprioceiling</definition>
        <argsstring>(const pthread_mutexattr_t *attr, int *prioceiling)</argsstring>
        <name>pthread_mutexattr_getprioceiling</name>
        <param>
          <type>const pthread_mutexattr_t *</type>
          <declname>attr</declname>
          <briefdescription><para>Mutex Thread Attribute Object </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>prioceiling</declname>
          <briefdescription><para>Destination pointer (cannot be NULL) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function gets the priority ceiling from <emphasis>attr</emphasis> and stores it in <emphasis>prioceiling</emphasis>.</para><para><simplesect kind="return"><para>Zero on success or -1 with errno (see <ref refid="group___e_r_r_n_o" kindref="compound">Error Numbers</ref>) set to:<itemizedlist>
<listitem><para>EINVAL: <emphasis>attr</emphasis> does not refer to an initialized mutex attribute object </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_mutexattr.c" line="29" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_mutexattr.c" bodystart="29" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="group___p_t_h_r_e_a_d___m_u_t_e_x_1ga5e833d8dae2a5be4209fb92b196c9138" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_mutexattr_setprioceiling</definition>
        <argsstring>(pthread_mutexattr_t *attr, int prio_ceiling)</argsstring>
        <name>pthread_mutexattr_setprioceiling</name>
        <param>
          <type>pthread_mutexattr_t *</type>
          <declname>attr</declname>
          <briefdescription><para>Mutex Thread Attribute Object </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>prio_ceiling</declname>
          <briefdescription><para>The priority ceiling to set </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function sets the priority ceiling in <emphasis>attr</emphasis> to <emphasis>prio_ceiling</emphasis>.</para><para><simplesect kind="return"><para>Zero on success or -1 with errno (see <ref refid="group___e_r_r_n_o" kindref="compound">Error Numbers</ref>) set to:<itemizedlist>
<listitem><para>EINVAL: <emphasis>attr</emphasis> does not refer to an initialized mutex attribute object </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_mutexattr.c" line="44" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_mutexattr.c" bodystart="44" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="group___p_t_h_r_e_a_d___m_u_t_e_x_1ga200fcbc9157e6183376f83bc0e5937dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_mutexattr_getprotocol</definition>
        <argsstring>(const pthread_mutexattr_t *attr, int *protocol)</argsstring>
        <name>pthread_mutexattr_getprotocol</name>
        <param>
          <type>const pthread_mutexattr_t *</type>
          <declname>attr</declname>
          <briefdescription><para>Mutex Thread Attribute Object </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>protocol</declname>
          <briefdescription><para>Pointer to the destination protocol </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function gets the protocol from <emphasis>attr</emphasis> and stores it in <emphasis>protocol</emphasis>.</para><para><simplesect kind="return"><para>Zero on success or -1 with errno (see <ref refid="group___e_r_r_n_o" kindref="compound">Error Numbers</ref>) set to:<itemizedlist>
<listitem><para>EINVAL: <emphasis>attr</emphasis> does not refer to an initialized mutex attribute object </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_mutexattr.c" line="60" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_mutexattr.c" bodystart="60" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="group___p_t_h_r_e_a_d___m_u_t_e_x_1gae7e6584c2b2cf9b9ff061115d2342bb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_mutexattr_setprotocol</definition>
        <argsstring>(pthread_mutexattr_t *attr, int protocol)</argsstring>
        <name>pthread_mutexattr_setprotocol</name>
        <param>
          <type>pthread_mutexattr_t *</type>
          <declname>attr</declname>
          <briefdescription><para>Mutex Thread Attribute Object </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>protocol</declname>
          <briefdescription><para>The new protocol </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function sets protocol in <emphasis>attr</emphasis> to <emphasis>protocol</emphasis>.</para><para><simplesect kind="return"><para>Zero on success or -1 with errno (see <ref refid="group___e_r_r_n_o" kindref="compound">Error Numbers</ref>) set to:<itemizedlist>
<listitem><para>EINVAL: <emphasis>attr</emphasis> does not refer to an initialized mutex attribute object </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_mutexattr.c" line="75" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_mutexattr.c" bodystart="75" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="group___p_t_h_r_e_a_d___m_u_t_e_x_1gaf8d7f85a0d52d3560db6d36cf9b44ac0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_mutexattr_getpshared</definition>
        <argsstring>(const pthread_mutexattr_t *attr, int *pshared)</argsstring>
        <name>pthread_mutexattr_getpshared</name>
        <param>
          <type>const pthread_mutexattr_t *</type>
          <declname>attr</declname>
          <briefdescription><para>Mutex Thread Attribute Object </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pshared</declname>
          <briefdescription><para>The pointer to the destination pshared value </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function gets the process shared value from <emphasis>attr</emphasis> and stores it in <emphasis>pshared</emphasis>.</para><para><simplesect kind="return"><para>Zero on success or -1 with errno (see <ref refid="group___e_r_r_n_o" kindref="compound">Error Numbers</ref>) set to:<itemizedlist>
<listitem><para>EINVAL: <emphasis>attr</emphasis> does not refer to an initialized mutex attribute object </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_mutexattr.c" line="102" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_mutexattr.c" bodystart="102" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="group___p_t_h_r_e_a_d___m_u_t_e_x_1ga73bd8697b91e0ee9a63c30052ac9f72f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_mutexattr_setpshared</definition>
        <argsstring>(pthread_mutexattr_t *attr, int pshared)</argsstring>
        <name>pthread_mutexattr_setpshared</name>
        <param>
          <type>pthread_mutexattr_t *</type>
          <declname>attr</declname>
          <briefdescription><para>Mutex Thread Attribute Object </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pshared</declname>
          <briefdescription><para>The new pshared value (non-zero to share with other processes) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function sets the process shared value in <emphasis>attr</emphasis> to <emphasis>pshared</emphasis>. A non-zero <emphasis>pshared</emphasis> means the mutex is shared.</para><para><simplesect kind="return"><para>Zero on success or -1 with errno (see <ref refid="group___e_r_r_n_o" kindref="compound">Error Numbers</ref>) set to:<itemizedlist>
<listitem><para>EINVAL: <emphasis>attr</emphasis> does not refer to an initialized mutex attribute object </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_mutexattr.c" line="118" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_mutexattr.c" bodystart="118" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="group___p_t_h_r_e_a_d___m_u_t_e_x_1ga7f064a4db96a009a5a9a7c7e5cc03599" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_mutexattr_gettype</definition>
        <argsstring>(const pthread_mutexattr_t *attr, int *type)</argsstring>
        <name>pthread_mutexattr_gettype</name>
        <param>
          <type>const pthread_mutexattr_t *</type>
          <declname>attr</declname>
          <briefdescription><para>Mutex Thread Attribute Object </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>type</declname>
          <briefdescription><para>The destination pointer for the type </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function gets the type from <emphasis>attr</emphasis> and stores it in <emphasis>type</emphasis>.</para><para><simplesect kind="return"><para>Zero on success or -1 with errno (see <ref refid="group___e_r_r_n_o" kindref="compound">Error Numbers</ref>) set to:<itemizedlist>
<listitem><para>EINVAL: <emphasis>attr</emphasis> does not refer to an initialized mutex attribute object </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_mutexattr.c" line="134" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_mutexattr.c" bodystart="134" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="group___p_t_h_r_e_a_d___m_u_t_e_x_1ga8387c80e660e9426f801ac0217ecfae5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_mutexattr_settype</definition>
        <argsstring>(pthread_mutexattr_t *attr, int type)</argsstring>
        <name>pthread_mutexattr_settype</name>
        <param>
          <type>pthread_mutexattr_t *</type>
          <declname>attr</declname>
          <briefdescription><para>Mutex Thread Attribute Object </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
          <briefdescription><para>The new type either PTHREAD_MUTEX_NORMAL or PTHREAD_MUTEX_RECURSIVE </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function sets the type in <emphasis>attr</emphasis> to <emphasis>type</emphasis>. The <emphasis>type</emphasis> value should be on of:<itemizedlist>
<listitem><para>PTHREAD_MUTEX_NORMAL</para></listitem><listitem><para>PTHREAD_MUTEX_RECURSIVE</para></listitem></itemizedlist>
</para><para><simplesect kind="return"><para>Zero on success or -1 with errno (see <ref refid="group___e_r_r_n_o" kindref="compound">Error Numbers</ref>) set to:<itemizedlist>
<listitem><para>EINVAL: <emphasis>attr</emphasis> does not refer to an initialized mutex attribute object </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_mutexattr.c" line="156" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_mutexattr.c" bodystart="156" bodyend="177"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Copyright<sp/>2011;<sp/>All<sp/>Rights<sp/>Reserved</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Please<sp/>see<sp/>http://www.coactionos.com/license.html<sp/>for</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>licensing<sp/>information.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pthread_mutexattr_check_initialized(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pthread_mutexattr_t<sp/>*<sp/>attr);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___p_t_h_r_e_a_d___m_u_t_e_x_1gaa3e933279a6bea662232701ba134d0bb" kindref="member">pthread_mutexattr_getprioceiling</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pthread_mutexattr_t<sp/>*attr<sp/>,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>prioceiling<sp/>){</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pthread_mutexattr_check_initialized(attr)<sp/>&lt;<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*prioceiling<sp/>=<sp/>attr-&gt;prio_ceiling;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___p_t_h_r_e_a_d___m_u_t_e_x_1ga5e833d8dae2a5be4209fb92b196c9138" kindref="member">pthread_mutexattr_setprioceiling</ref>(pthread_mutexattr_t<sp/>*attr<sp/>,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prio_ceiling<sp/>){</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pthread_mutexattr_check_initialized(attr)<sp/>&lt;<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>attr-&gt;prio_ceiling<sp/>=<sp/>prio_ceiling;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___p_t_h_r_e_a_d___m_u_t_e_x_1ga200fcbc9157e6183376f83bc0e5937dd" kindref="member">pthread_mutexattr_getprotocol</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pthread_mutexattr_t<sp/>*attr<sp/>,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*protocol<sp/>){</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pthread_mutexattr_check_initialized(attr)<sp/>&lt;<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*protocol<sp/>=<sp/>attr-&gt;protocol;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___p_t_h_r_e_a_d___m_u_t_e_x_1gae7e6584c2b2cf9b9ff061115d2342bb5" kindref="member">pthread_mutexattr_setprotocol</ref>(pthread_mutexattr_t<sp/>*attr<sp/>,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>protocol<sp/>){</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pthread_mutexattr_check_initialized(attr)<sp/>&lt;<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(protocol){</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PTHREAD_PRIO_NONE:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PTHREAD_PRIO_INHERIT:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PTHREAD_PRIO_PROTECT:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>attr-&gt;protocol<sp/>=<sp/>protocol;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___p_t_h_r_e_a_d___m_u_t_e_x_1gaf8d7f85a0d52d3560db6d36cf9b44ac0" kindref="member">pthread_mutexattr_getpshared</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pthread_mutexattr_t<sp/>*attr<sp/>,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pshared<sp/>){</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pthread_mutexattr_check_initialized(attr)<sp/>&lt;<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*pshared<sp/>=<sp/>attr-&gt;process_shared;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___p_t_h_r_e_a_d___m_u_t_e_x_1ga73bd8697b91e0ee9a63c30052ac9f72f" kindref="member">pthread_mutexattr_setpshared</ref>(pthread_mutexattr_t<sp/>*attr<sp/>,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pshared<sp/>){</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pthread_mutexattr_check_initialized(attr)<sp/>&lt;<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>attr-&gt;process_shared<sp/>=<sp/>pshared;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___p_t_h_r_e_a_d___m_u_t_e_x_1ga7f064a4db96a009a5a9a7c7e5cc03599" kindref="member">pthread_mutexattr_gettype</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pthread_mutexattr_t<sp/>*attr<sp/>,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*type<sp/>){</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pthread_mutexattr_check_initialized(attr)<sp/>&lt;<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>attr-&gt;recursive<sp/>!=<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*type<sp/>=<sp/>PTHREAD_MUTEX_RECURSIVE;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*type<sp/>=<sp/>PTHREAD_MUTEX_NORMAL;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___p_t_h_r_e_a_d___m_u_t_e_x_1ga8387c80e660e9426f801ac0217ecfae5" kindref="member">pthread_mutexattr_settype</ref>(pthread_mutexattr_t<sp/>*attr<sp/>,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type<sp/>){</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pthread_mutexattr_check_initialized(attr)<sp/>&lt;<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(type){</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PTHREAD_MUTEX_NORMAL:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attr-&gt;recursive<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PTHREAD_MUTEX_RECURSIVE:</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attr-&gt;recursive<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>PTHREAD_MUTEX_ERRORCHECK:</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>EINVAL;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_mutexattr.c"/>
  </compounddef>
</doxygen>
