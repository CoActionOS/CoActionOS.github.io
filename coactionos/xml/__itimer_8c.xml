<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="__itimer_8c" kind="file">
    <compoundname>_itimer.c</compoundname>
    <includes local="no">sys/time.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">errno.h</includes>
    <incdepgraph>
      <node id="2400">
        <label>errno.h</label>
      </node>
      <node id="2397">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/time/_itimer.c</label>
        <link refid="_itimer.c"/>
        <childnode refid="2398" relation="include">
        </childnode>
        <childnode refid="2399" relation="include">
        </childnode>
        <childnode refid="2400" relation="include">
        </childnode>
      </node>
      <node id="2399">
        <label>time.h</label>
      </node>
      <node id="2398">
        <label>sys/time.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___t_i_m_e_1ga9749651a934824e5f4de7248a9604604" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _getitimer</definition>
        <argsstring>(int which, struct itimerval *value)</argsstring>
        <name>_getitimer</name>
        <param>
          <type>int</type>
          <declname>which</declname>
        </param>
        <param>
          <type>struct itimerval *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/time/_itimer.c" line="18" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/time/_itimer.c" bodystart="18" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="group___t_i_m_e_1ga7c632070d94beead3a3427d087beb3fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _setitimer</definition>
        <argsstring>(int which, const struct itimerval *value, struct itimerval *ovalue)</argsstring>
        <name>_setitimer</name>
        <param>
          <type>int</type>
          <declname>which</declname>
        </param>
        <param>
          <type>const struct itimerval *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>struct itimerval *</type>
          <declname>ovalue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/time/_itimer.c" line="24" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/time/_itimer.c" bodystart="24" bodyend="28"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Copyright<sp/>2011;<sp/>All<sp/>Rights<sp/>Reserved</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Please<sp/>see<sp/>http://www.coactionos.com/license.html<sp/>for</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>licensing<sp/>information.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//struct<sp/>itimerval<sp/>itimers[SYSCALLS_NUM_ITIMERS];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_getitimer(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>itimerval<sp/>*value){</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>current<sp/>value<sp/>(time<sp/>of<sp/>day<sp/>minus<sp/>the<sp/>start<sp/>time)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENOTSUP;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_setitimer(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>itimerval<sp/>*<sp/>value,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>itimerval<sp/>*<sp/>ovalue)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>ENOTSUP;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/time/_itimer.c"/>
  </compounddef>
</doxygen>
