<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="sysfs_8h" kind="file">
    <compoundname>sysfs.h</compoundname>
    <includes local="no">stdbool.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">dirent.h</includes>
    <includes refid="device_8h" local="yes">device.h</includes>
    <includedby refid="cafs__lite_8h" local="yes">/Users/tgil/git/CoActionOS/CoActionOS/include/cafs_lite.h</includedby>
    <includedby refid="dirent_8c" local="yes">/Users/tgil/git/CoActionOS/CoActionOS/src/sys/dirent/dirent.c</includedby>
    <includedby refid="mqueue_8c" local="yes">/Users/tgil/git/CoActionOS/CoActionOS/src/sys/mqueue/mqueue.c</includedby>
    <includedby refid="sem_8c" local="yes">/Users/tgil/git/CoActionOS/CoActionOS/src/sys/semaphore/sem.c</includedby>
    <includedby refid="__close_8c" local="yes">/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/_close.c</includedby>
    <includedby refid="unistd__fs_8h" local="yes">/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/unistd_fs.h</includedby>
    <includedby refid="unistd__flags_8h" local="yes">/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/unistd_flags.h</includedby>
    <includedby refid="__exit_8c" local="yes">/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/_exit.c</includedby>
    <includedby refid="access_8c" local="yes">/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/access.c</includedby>
    <incdepgraph>
      <node id="1953">
        <label>sys/stat.h</label>
      </node>
      <node id="1949">
        <label>stdbool.h</label>
      </node>
      <node id="1959">
        <label>ioctl.h</label>
        <link refid="ioctl_8h_source"/>
      </node>
      <node id="1951">
        <label>stdint.h</label>
      </node>
      <node id="1952">
        <label>stddef.h</label>
      </node>
      <node id="1950">
        <label>sys/types.h</label>
      </node>
      <node id="1957">
        <label>hwpl/arch.h</label>
      </node>
      <node id="1955">
        <label>device.h</label>
        <link refid="device_8h_source"/>
        <childnode refid="1953" relation="include">
        </childnode>
        <childnode refid="1949" relation="include">
        </childnode>
        <childnode refid="1956" relation="include">
        </childnode>
        <childnode refid="1957" relation="include">
        </childnode>
        <childnode refid="1958" relation="include">
        </childnode>
      </node>
      <node id="1956">
        <label>hwpl/types.h</label>
        <link refid="types_8h_source"/>
        <childnode refid="1951" relation="include">
        </childnode>
        <childnode refid="1949" relation="include">
        </childnode>
      </node>
      <node id="1958">
        <label>dev/pio.h</label>
        <link refid="pio_8h"/>
        <childnode refid="1949" relation="include">
        </childnode>
        <childnode refid="1951" relation="include">
        </childnode>
        <childnode refid="1959" relation="include">
        </childnode>
        <childnode refid="1957" relation="include">
        </childnode>
      </node>
      <node id="1948">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h</label>
        <link refid="sysfs.h"/>
        <childnode refid="1949" relation="include">
        </childnode>
        <childnode refid="1950" relation="include">
        </childnode>
        <childnode refid="1951" relation="include">
        </childnode>
        <childnode refid="1952" relation="include">
        </childnode>
        <childnode refid="1953" relation="include">
        </childnode>
        <childnode refid="1954" relation="include">
        </childnode>
        <childnode refid="1955" relation="include">
        </childnode>
      </node>
      <node id="1954">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1968">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/_fstat.c</label>
        <link refid="__fstat_8c"/>
      </node>
      <node id="1985">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/unistd_flags.h</label>
        <link refid="unistd__flags_8h_source"/>
        <childnode refid="1965" relation="include">
        </childnode>
        <childnode refid="1967" relation="include">
        </childnode>
        <childnode refid="1968" relation="include">
        </childnode>
        <childnode refid="1969" relation="include">
        </childnode>
        <childnode refid="1970" relation="include">
        </childnode>
        <childnode refid="1971" relation="include">
        </childnode>
        <childnode refid="1972" relation="include">
        </childnode>
        <childnode refid="1973" relation="include">
        </childnode>
        <childnode refid="1976" relation="include">
        </childnode>
        <childnode refid="1978" relation="include">
        </childnode>
        <childnode refid="1986" relation="include">
        </childnode>
        <childnode refid="1982" relation="include">
        </childnode>
        <childnode refid="1983" relation="include">
        </childnode>
        <childnode refid="1984" relation="include">
        </childnode>
      </node>
      <node id="1966">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/unistd_fs.h</label>
        <link refid="unistd__fs_8h_source"/>
        <childnode refid="1965" relation="include">
        </childnode>
        <childnode refid="1967" relation="include">
        </childnode>
        <childnode refid="1968" relation="include">
        </childnode>
        <childnode refid="1969" relation="include">
        </childnode>
        <childnode refid="1970" relation="include">
        </childnode>
        <childnode refid="1971" relation="include">
        </childnode>
        <childnode refid="1972" relation="include">
        </childnode>
        <childnode refid="1973" relation="include">
        </childnode>
        <childnode refid="1974" relation="include">
        </childnode>
        <childnode refid="1975" relation="include">
        </childnode>
        <childnode refid="1976" relation="include">
        </childnode>
        <childnode refid="1977" relation="include">
        </childnode>
        <childnode refid="1978" relation="include">
        </childnode>
        <childnode refid="1979" relation="include">
        </childnode>
        <childnode refid="1980" relation="include">
        </childnode>
        <childnode refid="1981" relation="include">
        </childnode>
        <childnode refid="1982" relation="include">
        </childnode>
        <childnode refid="1983" relation="include">
        </childnode>
        <childnode refid="1984" relation="include">
        </childnode>
      </node>
      <node id="1983">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/rmdir.c</label>
        <link refid="rmdir_8c"/>
      </node>
      <node id="1975">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/_stat.c</label>
        <link refid="__stat_8c"/>
      </node>
      <node id="1984">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/unistd_data_transfer.c</label>
        <link refid="unistd__data__transfer_8c"/>
      </node>
      <node id="1972">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/_open.c</label>
        <link refid="__open_8c"/>
      </node>
      <node id="1978">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/_write.c</label>
        <link refid="__write_8c"/>
      </node>
      <node id="1962">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/dirent/dirent.c</label>
        <link refid="dirent_8c"/>
      </node>
      <node id="1961">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/include/cafs_lite.h</label>
        <link refid="cafs__lite_8h_source"/>
      </node>
      <node id="1981">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/lstat.c</label>
        <link refid="lstat_8c"/>
      </node>
      <node id="1971">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/_lseek.c</label>
        <link refid="__lseek_8c"/>
      </node>
      <node id="1988">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/access.c</label>
        <link refid="access_8c"/>
      </node>
      <node id="1973">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/_read.c</label>
        <link refid="__read_8c"/>
      </node>
      <node id="1965">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/_close.c</label>
        <link refid="__close_8c"/>
      </node>
      <node id="1967">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/_fcntl.c</label>
        <link refid="__fcntl_8c"/>
      </node>
      <node id="1982">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/mkdir.c</label>
        <link refid="mkdir_8c"/>
      </node>
      <node id="1979">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/chmod.c</label>
        <link refid="chmod_8c"/>
      </node>
      <node id="1963">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/mqueue/mqueue.c</label>
        <link refid="mqueue_8c"/>
      </node>
      <node id="1970">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/_link.c</label>
        <link refid="__link_8c"/>
      </node>
      <node id="1974">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/_rename.c</label>
        <link refid="__rename_8c"/>
      </node>
      <node id="1969">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/_isatty.c</label>
        <link refid="__isatty_8c"/>
      </node>
      <node id="1964">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/semaphore/sem.c</label>
        <link refid="sem_8c"/>
      </node>
      <node id="1976">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/_symlink.c</label>
        <link refid="__symlink_8c"/>
      </node>
      <node id="1980">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/chown.c</label>
        <link refid="chown_8c"/>
      </node>
      <node id="1987">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/_exit.c</label>
        <link refid="__exit_8c"/>
      </node>
      <node id="1977">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/_unlink.c</label>
        <link refid="__unlink_8c"/>
      </node>
      <node id="1960">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h</label>
        <link refid="sysfs.h"/>
        <childnode refid="1961" relation="include">
        </childnode>
        <childnode refid="1962" relation="include">
        </childnode>
        <childnode refid="1963" relation="include">
        </childnode>
        <childnode refid="1964" relation="include">
        </childnode>
        <childnode refid="1965" relation="include">
        </childnode>
        <childnode refid="1966" relation="include">
        </childnode>
        <childnode refid="1985" relation="include">
        </childnode>
        <childnode refid="1987" relation="include">
        </childnode>
        <childnode refid="1988" relation="include">
        </childnode>
      </node>
      <node id="1986">
        <label>/Users/tgil/git/CoActionOS/CoActionOS/src/sys/unistd/ioctl.c</label>
        <link refid="ioctl_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structsysfs__t" prot="public">sysfs_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="sysfs_8h_1a2a7c705a75247332a5579b006ba2d186" prot="public" static="no">
        <name>SYSFS_NOTSUP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="27" column="9" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysfs_8h_1a057f0ce5ba6dc40bc8787c32a5bc0a7b" prot="public" static="no">
        <name>SYSFS_NOTSUP_VOID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="28" column="9" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysfs_8h_1ab20c56f72ebd70ae7193d15d2cb3f759" prot="public" static="no">
        <name>SYSFS_READONLY_ACCESS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="95" column="9" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysfs_8h_1a793097347314d4cca54e97fb3168c035" prot="public" static="no">
        <name>SYSFS_ALL_ACCESS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="96" column="9" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysfs_8h_1ad57951616ec71c63dc53404f3b018e19" prot="public" static="no">
        <name>SYSFS_ROOT</name>
        <param><defname>mount_loc_name</defname></param>
        <param><defname>cfgp</defname></param>
        <param><defname>access_mode</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="98" column="9" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysfs_8h_1ab3378d3db19e5d09b373192a93dd86b2" prot="public" static="no">
        <name>SYSFS_DEV</name>
        <param><defname>mount_loc_name</defname></param>
        <param><defname>cfgp</defname></param>
        <param><defname>access_mode</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="130" column="9" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysfs_8h_1adec3d61752fddedbacf39c47c92ab67a" prot="public" static="no">
        <name>SYSFS_APP</name>
        <param><defname>mount_loc_name</defname></param>
        <param><defname>cfgp</defname></param>
        <param><defname>access_mode</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="162" column="9" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sysfs_8h_1ae5e3bd337648cdd410d0130c2a5cf798" prot="public" static="no">
        <name>SYSFS_TERMINATOR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="194" column="9" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="sysfs_8h_1a5920b84c5c7b1640fa54230a917fe7f8" prot="public" static="no" mutable="no">
        <type>const sysfs_t const</type>
        <definition>const sysfs_t const sysfs_list[]</definition>
        <argsstring>[]</argsstring>
        <name>sysfs_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="199" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="sysfs_8h_1a6b1b76d5745d067a7f2b8d770bcc37ff" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char sysfs_validset[]</definition>
        <argsstring>[]</argsstring>
        <name>sysfs_validset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="220" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sysfs_8h_1a1d9bd418a30567ec38ae9aaf5b60d77a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sysfs_notsup</definition>
        <argsstring>(void)</argsstring>
        <name>sysfs_notsup</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1a867de1385b1cea404740f11367f7b6ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* sysfs_notsup_null</definition>
        <argsstring>(void)</argsstring>
        <name>sysfs_notsup_null</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1aece2d9c497fd4d2893395513a1b61943" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sysfs_notsup_void</definition>
        <argsstring>(void)</argsstring>
        <name>sysfs_notsup_void</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1a6e0c74830aa002e67bfa8f16ca9a0e8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rootfs_init</definition>
        <argsstring>(const void *cfg)</argsstring>
        <name>rootfs_init</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1a9ffa3d3dc3cbd4e988adac750e77bfe7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rootfs_stat</definition>
        <argsstring>(const void *cfg, const char *path, struct stat *st)</argsstring>
        <name>rootfs_stat</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>struct <ref refid="group___u_n_i___f_s_1ga3dc1b07404b646712a144e2057359876" kindref="member">stat</ref> *</type>
          <declname>st</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1a0603137c7a165f63f4734d838f7450d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rootfs_opendir</definition>
        <argsstring>(const void *cfg, void **handle, const char *path)</argsstring>
        <name>rootfs_opendir</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1aed0c27d9adec80d297e80554b117920d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rootfs_readdir_r</definition>
        <argsstring>(const void *cfg, void *handle, int loc, struct dirent *entry)</argsstring>
        <name>rootfs_readdir_r</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>struct dirent *</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1afc2b7a909b8f690d20b472ad636988ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rootfs_closedir</definition>
        <argsstring>(const void *cfg, void *handle)</argsstring>
        <name>rootfs_closedir</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1a9754eedd24f524b9b59fbcc4bc14b17f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int devfs_init</definition>
        <argsstring>(const void *cfg)</argsstring>
        <name>devfs_init</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1a04651fa6559fc775500085232b914404" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int devfs_open</definition>
        <argsstring>(const void *cfg, void **handle, const char *path, int flags, int mode)</argsstring>
        <name>devfs_open</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1aab475d943227b22a407727fef3ecf234" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int devfs_priv_read</definition>
        <argsstring>(const void *cfg, void *handle, device_transfer_t *op)</argsstring>
        <name>devfs_priv_read</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="structdevice__transfer__t" kindref="compound">device_transfer_t</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1a010a47ca0b2ea9cbaf5560f73556e4ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int devfs_priv_write</definition>
        <argsstring>(const void *cfg, void *handle, device_transfer_t *op)</argsstring>
        <name>devfs_priv_write</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="structdevice__transfer__t" kindref="compound">device_transfer_t</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1a467c3d2e31fe84de971c60062cdd259e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int devfs_priv_ioctl</definition>
        <argsstring>(const void *cfg, void *handle, int request, void *ctl)</argsstring>
        <name>devfs_priv_ioctl</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>request</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ctl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1a89bac46637e11fa2bcf0aed197deb511" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int devfs_close</definition>
        <argsstring>(const void *cfg, void **handle)</argsstring>
        <name>devfs_close</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1a10a19710bca569297af201f0ef875b64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int devfs_fstat</definition>
        <argsstring>(const void *cfg, void *handle, struct stat *st)</argsstring>
        <name>devfs_fstat</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>struct <ref refid="group___u_n_i___f_s_1ga3dc1b07404b646712a144e2057359876" kindref="member">stat</ref> *</type>
          <declname>st</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1a8468943bf2fce8f738f09ed077ced585" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int devfs_stat</definition>
        <argsstring>(const void *cfg, const char *path, struct stat *st)</argsstring>
        <name>devfs_stat</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>struct <ref refid="group___u_n_i___f_s_1ga3dc1b07404b646712a144e2057359876" kindref="member">stat</ref> *</type>
          <declname>st</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1ac725eb44b18e4bf9bee0c5db11c4d401" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int devfs_opendir</definition>
        <argsstring>(const void *cfg, void **handle, const char *path)</argsstring>
        <name>devfs_opendir</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1a63c962a4bc0e5cc657bd1eeb8748c357" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int devfs_readdir_r</definition>
        <argsstring>(const void *cfg, void *handle, int loc, struct dirent *entry)</argsstring>
        <name>devfs_readdir_r</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>struct dirent *</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1a2ff5c64ac7d41ff02a95b92815f436f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int devfs_closedir</definition>
        <argsstring>(const void *cfg, void *handle)</argsstring>
        <name>devfs_closedir</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1a711985522dee24bd28d4ca4c9e907851" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int appfs_init</definition>
        <argsstring>(const void *cfg)</argsstring>
        <name>appfs_init</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1a9e203253fdf2c00ea4cf50920d4b4d68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int appfs_startup</definition>
        <argsstring>(const void *cfg)</argsstring>
        <name>appfs_startup</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1ae6bfdc13ecc4c59cf4021622794ce347" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int appfs_mkfs</definition>
        <argsstring>(const void *cfg)</argsstring>
        <name>appfs_mkfs</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1a7438f31dffc33a4244bbcba62d9e8917" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int appfs_open</definition>
        <argsstring>(const void *cfg, void **handle, const char *path, int flags, int mode)</argsstring>
        <name>appfs_open</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1a78f00020174e2596e41bb237533e75bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int appfs_priv_read</definition>
        <argsstring>(const void *cfg, void *handle, device_transfer_t *op)</argsstring>
        <name>appfs_priv_read</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="structdevice__transfer__t" kindref="compound">device_transfer_t</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1a18213950b147a2fa2cd687bf775ef925" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int appfs_priv_write</definition>
        <argsstring>(const void *cfg, void *handle, device_transfer_t *op)</argsstring>
        <name>appfs_priv_write</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="structdevice__transfer__t" kindref="compound">device_transfer_t</ref> *</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1a04ce00a62dd2e220aaf385804267300b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int appfs_priv_ioctl</definition>
        <argsstring>(const void *cfg, void *handle, int request, void *ctl)</argsstring>
        <name>appfs_priv_ioctl</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>request</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ctl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1ae27c75b2b88920c7bb626af11b22355b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int appfs_close</definition>
        <argsstring>(const void *cfg, void **handle)</argsstring>
        <name>appfs_close</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1a6e56ddcc044c6c1cb7d1b90e9d245354" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int appfs_fstat</definition>
        <argsstring>(const void *cfg, void *handle, struct stat *st)</argsstring>
        <name>appfs_fstat</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>struct <ref refid="group___u_n_i___f_s_1ga3dc1b07404b646712a144e2057359876" kindref="member">stat</ref> *</type>
          <declname>st</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1a6e1f31ce3a04a388de01c0d5c85ee099" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int appfs_stat</definition>
        <argsstring>(const void *cfg, const char *path, struct stat *st)</argsstring>
        <name>appfs_stat</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>struct <ref refid="group___u_n_i___f_s_1ga3dc1b07404b646712a144e2057359876" kindref="member">stat</ref> *</type>
          <declname>st</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1a33e9a826e1cd6e43848771c0795ba378" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int appfs_opendir</definition>
        <argsstring>(const void *cfg, void **handle, const char *path)</argsstring>
        <name>appfs_opendir</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1a7bcef4cf3b033b4439b867ee3769d59c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int appfs_readdir_r</definition>
        <argsstring>(const void *cfg, void *handle, int loc, struct dirent *entry)</argsstring>
        <name>appfs_readdir_r</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>struct dirent *</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1ad81333eb40ee38aa3a1242f0a29b9cfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int appfs_closedir</definition>
        <argsstring>(const void *cfg, void *handle)</argsstring>
        <name>appfs_closedir</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1a325bb97f4439245602ab8f36434e4a9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int appfs_unlink</definition>
        <argsstring>(const void *cfg, const char *path)</argsstring>
        <name>appfs_unlink</name>
        <param>
          <type>const void *</type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1a069bc61e6b668ac8bc40ecc3b54d0c94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const sysfs_t *</type>
        <definition>const sysfs_t* sysfs_find</definition>
        <argsstring>(const char *path, bool needs_parent)</argsstring>
        <name>sysfs_find</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>needs_parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1ac71ab40bf8ed8de9c162308b44eaf970" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* sysfs_stripmountpath</definition>
        <argsstring>(const sysfs_t *fs, const char *path)</argsstring>
        <name>sysfs_stripmountpath</name>
        <param>
          <type>const sysfs_t *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1a615501aaffeef992b5cdb293521a6eb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sysfs_ispathinvalid</definition>
        <argsstring>(const char *path)</argsstring>
        <name>sysfs_ispathinvalid</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1aae37e69ff2f7934c8037062ec6fc6b74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* sysfs_getfilename</definition>
        <argsstring>(const char *path, int *elements)</argsstring>
        <name>sysfs_getfilename</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1aecfb23eab3227596cebb288616d12059" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sysfs_getamode</definition>
        <argsstring>(int flags)</argsstring>
        <name>sysfs_getamode</name>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1a0d7d7738b9f8b304d865b83d4836c391" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sysfs_access</definition>
        <argsstring>(int file_mode, int file_uid, int file_gid, int amode)</argsstring>
        <name>sysfs_access</name>
        <param>
          <type>int</type>
          <declname>file_mode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>file_uid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>file_gid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>amode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="206" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1ac41a7f448cb918bb56c0cfc2af3e087b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* sysfs_get_filename</definition>
        <argsstring>(const char *path)</argsstring>
        <name>sysfs_get_filename</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="207" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1a7db648cee8c8cb491373c30d772e3ae3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool sysfs_isterminator</definition>
        <argsstring>(const sysfs_t *fs)</argsstring>
        <name>sysfs_isterminator</name>
        <param>
          <type>const sysfs_t *</type>
          <declname>fs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="209" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" bodystart="210" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="sysfs_8h_1ac2dcf7b81e9f1c1491aa9e47893bf156" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sysfs_unlock</definition>
        <argsstring>(void)</argsstring>
        <name>sysfs_unlock</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h" line="217" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Copyright<sp/>2011;<sp/>All<sp/>Rights<sp/>Reserved</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Please<sp/>see<sp/>http://www.coactionos.com/license.html<sp/>for</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>licensing<sp/>information.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SYSFS_H_</highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SYSFS_H_</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dirent.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__SIM__</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;sim_device.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;device.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sysfs_notsup(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>sysfs_notsup_null(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sysfs_notsup_void(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYSFS_NOTSUP<sp/>((void*)sysfs_notsup)</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SYSFS_NOTSUP_VOID<sp/>((void*)sysfs_notsup_void)</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>mount_path[PATH_MAX];</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___u_n_i___p_e_r_m_s_1gaa6adc1f71f9027c8bdd8e88e8c843049" kindref="member">access</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int<sp/>(*init)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int<sp/>(*startup)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="group___c_a_o_s_1ga822cdf991a028966eb7656caefacae21" kindref="member">mkfs</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="group___u_n_i___f_i_l_e___a_c_c_e_s_s_1gac843f2e35e60c3bbf1da47d84306f29b" kindref="member">open</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/>int,<sp/>int);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int<sp/>(*priv_read)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/><ref refid="structdevice__transfer__t" kindref="compound">device_transfer_t</ref>*);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int<sp/>(*priv_write)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/><ref refid="structdevice__transfer__t" kindref="compound">device_transfer_t</ref>*);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int<sp/>(*priv_ioctl)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/>int,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="group___u_n_i___f_i_l_e___a_c_c_e_s_s_1gaefe7609d91407014d94611912cc2b1a3" kindref="member">read</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/>int,<sp/>int,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/>int);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="group___u_n_i___f_i_l_e___a_c_c_e_s_s_1gadd30ddeed4bdbf3c96fa36970c1ca778" kindref="member">write</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/>int,<sp/>int,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/>int);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="group___u_n_i___f_i_l_e___a_c_c_e_s_s_1gaacad1d135ca2779b583623678e36db7c" kindref="member">close</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="group___u_n_i___f_i_l_d_e_s_1gac1759a877da2f37512096f3a491e4112" kindref="member">fstat</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="group___u_n_i___f_s_1ga3dc1b07404b646712a144e2057359876" kindref="member">stat</ref>*);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="group___u_n_i___f_s_1ga2ce7c2db9fdb6aec06afaf3cfc5979c7" kindref="member">rename</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int<sp/>(*unlink)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="group___u_n_i___f_s_1ga548e5b744ca2e97beb61ad7aa41114e2" kindref="member">mkdir</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/>mode_t);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="group___u_n_i___f_s_1gab2df76f2c62ae012c2e417813b5fe8ce" kindref="member">rmdir</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int<sp/>(*</highlight><highlight class="keyword">remove</highlight><highlight class="normal">)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="group___d_i_r_e_n_t_1gad09dd96447776d2bc5d8321e4b499591" kindref="member">opendir</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="group___d_i_r_e_n_t_1gaaeac2b41e8c2c3a5f91c9bd511a8c0a6" kindref="member">closedir</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="group___d_i_r_e_n_t_1ga2219da481be06be4bf9f8f363b607492" kindref="member">readdir_r</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/>int,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dirent*);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="group___u_n_i___f_s_1ga84ea5b278f4012db4082e88a31634202" kindref="member">link</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="group___u_n_i___f_s_1ga891d38b93dac14c179ccfc3ed3f42a82" kindref="member">symlink</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="group___u_n_i___f_s_1ga3dc1b07404b646712a144e2057359876" kindref="member">stat</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="group___u_n_i___f_s_1ga3dc1b07404b646712a144e2057359876" kindref="member">stat</ref>*);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="group___u_n_i___f_i_l_d_e_s_1gac727ef949350b56ff4fd8103b13ec91c" kindref="member">lstat</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="group___u_n_i___f_s_1ga3dc1b07404b646712a144e2057359876" kindref="member">stat</ref>*);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="group___u_n_i___p_e_r_m_s_1gabdfbba6d30d9f53e6053a04890ad8116" kindref="member">chmod</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="group___u_n_i___p_e_r_m_s_1gaffffc50469285ec46d3a0594e818bc10" kindref="member">chown</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/>uid_t<sp/>uid,<sp/>gid_t<sp/>gid);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>void<sp/>(*unlock)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>cfg;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}<sp/>sysfs_t;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rootfs_init(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>cfg);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rootfs_stat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>cfg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>path,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="group___u_n_i___f_s_1ga3dc1b07404b646712a144e2057359876" kindref="member">stat</ref><sp/>*<sp/>st);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rootfs_opendir(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>cfg,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>path);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rootfs_readdir_r(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>cfg,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dirent<sp/>*<sp/>entry);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rootfs_closedir(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>cfg,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>handle);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>devfs_init(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>cfg);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>devfs_open(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>cfg,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>path,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>devfs_priv_read(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>cfg,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>handle,<sp/><ref refid="structdevice__transfer__t" kindref="compound">device_transfer_t</ref><sp/>*<sp/>op);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>devfs_priv_write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>cfg,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>handle,<sp/><ref refid="structdevice__transfer__t" kindref="compound">device_transfer_t</ref><sp/>*<sp/>op);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>devfs_priv_ioctl(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>cfg,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>request,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>ctl);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>devfs_close(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>cfg,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**<sp/>handle);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>devfs_fstat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>cfg,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>handle,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="group___u_n_i___f_s_1ga3dc1b07404b646712a144e2057359876" kindref="member">stat</ref><sp/>*<sp/>st);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>devfs_stat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>cfg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>path,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="group___u_n_i___f_s_1ga3dc1b07404b646712a144e2057359876" kindref="member">stat</ref><sp/>*<sp/>st);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>devfs_opendir(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>cfg,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>path);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>devfs_readdir_r(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>cfg,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dirent<sp/>*<sp/>entry);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>devfs_closedir(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>cfg,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>handle);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>appfs_init(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>cfg);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>appfs_startup(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>cfg);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>appfs_mkfs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>cfg);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>appfs_open(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>cfg,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>path,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>appfs_priv_read(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>cfg,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>handle,<sp/><ref refid="structdevice__transfer__t" kindref="compound">device_transfer_t</ref><sp/>*<sp/>op);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>appfs_priv_write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>cfg,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>handle,<sp/><ref refid="structdevice__transfer__t" kindref="compound">device_transfer_t</ref><sp/>*<sp/>op);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>appfs_priv_ioctl(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>cfg,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>request,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>ctl);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>appfs_close(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>cfg,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**<sp/>handle);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>appfs_fstat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>cfg,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>handle,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="group___u_n_i___f_s_1ga3dc1b07404b646712a144e2057359876" kindref="member">stat</ref><sp/>*<sp/>st);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>appfs_stat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>cfg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>path,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="group___u_n_i___f_s_1ga3dc1b07404b646712a144e2057359876" kindref="member">stat</ref><sp/>*<sp/>st);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>appfs_opendir(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>cfg,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>path);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>appfs_readdir_r(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>cfg,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dirent<sp/>*<sp/>entry);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>appfs_closedir(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>cfg,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>handle);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>appfs_unlink(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>cfg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>path);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYSFS_READONLY_ACCESS<sp/>(S_IRUSR|S_IRGRP|S_IROTH|S_IXUSR|S_IXGRP|S_IXOTH)</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SYSFS_ALL_ACCESS<sp/>(0777)</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYSFS_ROOT(mount_loc_name,<sp/>cfgp,<sp/>access_mode)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mount_path<sp/>=<sp/>mount_loc_name,<sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.access<sp/>=<sp/>access_mode,<sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.init<sp/>=<sp/>rootfs_init,<sp/>\</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.startup<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mkfs<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.open<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.priv_read<sp/>=<sp/>NULL,<sp/>\</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.priv_write<sp/>=<sp/>NULL,<sp/>\</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.read<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.write<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.priv_ioctl<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.close<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rename<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.unlink<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mkdir<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rmdir<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.remove<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.opendir<sp/>=<sp/>rootfs_opendir,<sp/>\</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.closedir<sp/>=<sp/>rootfs_closedir,<sp/>\</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.readdir_r<sp/>=<sp/>rootfs_readdir_r,<sp/>\</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.link<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.symlink<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.stat<sp/>=<sp/>rootfs_stat,<sp/>\</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.lstat<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.fstat<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.chmod<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.chown<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.unlock<sp/>=<sp/>SYSFS_NOTSUP_VOID,<sp/>\</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.cfg<sp/>=<sp/>cfgp,<sp/>\</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor">}</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYSFS_DEV(mount_loc_name,<sp/>cfgp,<sp/>access_mode)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mount_path<sp/>=<sp/>mount_loc_name,<sp/>\</highlight></codeline>
<codeline lineno="132"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.access<sp/>=<sp/>access_mode,<sp/>\</highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.init<sp/>=<sp/>devfs_init,<sp/>\</highlight></codeline>
<codeline lineno="134"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.startup<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mkfs<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.open<sp/>=<sp/>devfs_open,<sp/>\</highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.priv_read<sp/>=<sp/>devfs_priv_read,<sp/>\</highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.priv_write<sp/>=<sp/>devfs_priv_write,<sp/>\</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.priv_ioctl<sp/>=<sp/>devfs_priv_ioctl,<sp/>\</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.read<sp/>=<sp/>NULL,<sp/>\</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.write<sp/>=<sp/>NULL,<sp/>\</highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.close<sp/>=<sp/>devfs_close,<sp/>\</highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rename<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.unlink<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mkdir<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rmdir<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.remove<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.opendir<sp/>=<sp/>devfs_opendir,<sp/>\</highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.closedir<sp/>=<sp/>devfs_closedir,<sp/>\</highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.readdir_r<sp/>=<sp/>devfs_readdir_r,<sp/>\</highlight></codeline>
<codeline lineno="151"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.link<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="152"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.symlink<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="153"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.stat<sp/>=<sp/>devfs_stat,<sp/>\</highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.lstat<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="155"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.fstat<sp/>=<sp/>devfs_fstat,<sp/>\</highlight></codeline>
<codeline lineno="156"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.chmod<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.chown<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="158"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.unlock<sp/>=<sp/>SYSFS_NOTSUP_VOID,<sp/>\</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.cfg<sp/>=<sp/>cfgp,<sp/>\</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor">}</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYSFS_APP(mount_loc_name,<sp/>cfgp,<sp/>access_mode)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mount_path<sp/>=<sp/>mount_loc_name,<sp/>\</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.access<sp/>=<sp/>access_mode,<sp/>\</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.init<sp/>=<sp/>appfs_init,<sp/>\</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.startup<sp/>=<sp/>appfs_startup,<sp/>\</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mkfs<sp/>=<sp/>appfs_mkfs,<sp/>\</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.open<sp/>=<sp/>appfs_open,<sp/>\</highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.priv_read<sp/>=<sp/>appfs_priv_read,<sp/>\</highlight></codeline>
<codeline lineno="170"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.priv_write<sp/>=<sp/>appfs_priv_write,<sp/>\</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.read<sp/>=<sp/>NULL,<sp/>\</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.write<sp/>=<sp/>NULL,<sp/>\</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.close<sp/>=<sp/>appfs_close,<sp/>\</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.priv_ioctl<sp/>=<sp/>appfs_priv_ioctl,<sp/>\</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rename<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.unlink<sp/>=<sp/>appfs_unlink,<sp/>\</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.mkdir<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.rmdir<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.remove<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.opendir<sp/>=<sp/>appfs_opendir,<sp/>\</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.closedir<sp/>=<sp/>appfs_closedir,<sp/>\</highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.readdir_r<sp/>=<sp/>appfs_readdir_r,<sp/>\</highlight></codeline>
<codeline lineno="183"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.link<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.symlink<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.stat<sp/>=<sp/>appfs_stat,<sp/>\</highlight></codeline>
<codeline lineno="186"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.lstat<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="187"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.fstat<sp/>=<sp/>appfs_fstat,<sp/>\</highlight></codeline>
<codeline lineno="188"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.chmod<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="189"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.chown<sp/>=<sp/>SYSFS_NOTSUP,<sp/>\</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.unlock<sp/>=<sp/>SYSFS_NOTSUP_VOID,<sp/>\</highlight></codeline>
<codeline lineno="191"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.cfg<sp/>=<sp/>cfgp,<sp/>\</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor">}</highlight></codeline>
<codeline lineno="193"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SYSFS_TERMINATOR<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="195"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>.init<sp/>=<sp/>NULL<sp/>\</highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor">}</highlight></codeline>
<codeline lineno="197"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sysfs_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sysfs_list[];<sp/></highlight><highlight class="comment">//global<sp/>list<sp/>of<sp/>filesystems</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sysfs_t<sp/>*<sp/>sysfs_find(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>path,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>needs_parent);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>sysfs_stripmountpath(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sysfs_t<sp/>*<sp/>fs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>path);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sysfs_ispathinvalid(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>path);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>sysfs_getfilename(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>path,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>elements);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sysfs_getamode(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sysfs_access(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>file_mode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>file_uid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>file_gid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amode);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>sysfs_get_filename(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>path);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sysfs_isterminator(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sysfs_t<sp/>*<sp/>fs);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sysfs_isterminator(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sysfs_t<sp/>*<sp/>fs){</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fs-&gt;init<sp/>==<sp/>NULL<sp/>){</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sysfs_unlock(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>sysfs_validset[];</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SYSFS_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/Users/tgil/git/CoActionOS/CoActionOS/include/sysfs.h"/>
  </compounddef>
</doxygen>
