<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="group___p_t_h_r_e_a_d___a_t_t_r" kind="group">
    <compoundname>PTHREAD_ATTR</compoundname>
    <title>Attributes</title>
    <innerfile refid="pthread__attr_8c">pthread_attr.c</innerfile>
    <innerfile refid="pthread__attr__init_8c">pthread_attr_init.c</innerfile>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___p_t_h_r_e_a_d___a_t_t_r_1gad358947c13f0b19b18e35b7b32f6b89f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int check_initialized</definition>
        <argsstring>(const pthread_attr_t *attr)</argsstring>
        <name>check_initialized</name>
        <param>
          <type>const pthread_attr_t *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" line="25" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" bodystart="333" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="group___p_t_h_r_e_a_d___a_t_t_r_1ga391c34da42e68ddd24f5ee0c070d5c4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_getdetachstate</definition>
        <argsstring>(const pthread_attr_t *attr, int *detachstate)</argsstring>
        <name>pthread_attr_getdetachstate</name>
        <param>
          <type>const pthread_attr_t *</type>
          <declname>attr</declname>
          <briefdescription><para>a pointer to the attributes structure </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>detachstate</declname>
          <briefdescription><para>the destination for the detach state </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function gets the detach state from <emphasis>attr</emphasis> and stores it in <emphasis>detachstate</emphasis>. <simplesect kind="return"><para>Zero on success or -1 with errno set to:<itemizedlist>
<listitem><para>EINVAL: <emphasis>attr</emphasis> does not refer to an initialized thread attribute object </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" line="32" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" bodystart="32" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="group___p_t_h_r_e_a_d___a_t_t_r_1gae6ee78c307d8467b34a9b0c330993a54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_setdetachstate</definition>
        <argsstring>(pthread_attr_t *attr, int detachstate)</argsstring>
        <name>pthread_attr_setdetachstate</name>
        <param>
          <type>pthread_attr_t *</type>
          <declname>attr</declname>
          <briefdescription><para>a pointer to the attributes structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>detachstate</declname>
          <briefdescription><para>the new detach state (PTHREAD_CREATE_DETACHED or PTHREAD_CREATE_JOINABLE) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function sets the detach state in <emphasis>attr</emphasis> with <emphasis>detachstate</emphasis>. <simplesect kind="return"><para>Zero on success or -1 with errno set to:<itemizedlist>
<listitem><para>EINVAL: <emphasis>attr</emphasis> does not refer to an initialized thread attribute object</para></listitem><listitem><para>EINVAL: <emphasis>detachstate</emphasis> is not a valid </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" line="47" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" bodystart="47" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="group___p_t_h_r_e_a_d___a_t_t_r_1gaa8b692ecc3880fdd49a4d423ba1ce91e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_getguardsize</definition>
        <argsstring>(const pthread_attr_t *attr, size_t *guardsize)</argsstring>
        <name>pthread_attr_getguardsize</name>
        <param>
          <type>const pthread_attr_t *</type>
          <declname>attr</declname>
          <briefdescription><para>a pointer to the attributes structure </para></briefdescription>
        </param>
        <param>
          <type>size_t *</type>
          <declname>guardsize</declname>
          <briefdescription><para>the destination for the new guard size </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function gets the guard size from <emphasis>attr</emphasis> and stores it in <emphasis>guardsize</emphasis>. <simplesect kind="return"><para>Zero on success or -1 with errno set to:<itemizedlist>
<listitem><para>EINVAL: <emphasis>attr</emphasis> does not refer to an initialized thread attribute object </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" line="68" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" bodystart="68" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="group___p_t_h_r_e_a_d___a_t_t_r_1ga532b31c11a9d87663053c5342400758c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_setguardsize</definition>
        <argsstring>(pthread_attr_t *attr, size_t guardsize)</argsstring>
        <name>pthread_attr_setguardsize</name>
        <param>
          <type>pthread_attr_t *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>guardsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is not supported. The guard size is a fixed value that cannot be set by the user. <simplesect kind="return"><para>-1 with errno (see <ref refid="group___e_r_r_n_o" kindref="compound">Error Numbers</ref>) set to ENOTSUP </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" line="82" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" bodystart="82" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="group___p_t_h_r_e_a_d___a_t_t_r_1ga79a77b688c30213e5e52e6be178cde4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_getinheritsched</definition>
        <argsstring>(const pthread_attr_t *attr, int *inheritsched)</argsstring>
        <name>pthread_attr_getinheritsched</name>
        <param>
          <type>const pthread_attr_t *</type>
          <declname>attr</declname>
          <briefdescription><para>a pointer to the attributes structure </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>inheritsched</declname>
          <briefdescription><para>the destination for the inherit sched value </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function gets the inherit sched value from <emphasis>attr</emphasis> and stores it in <emphasis>inheritsched</emphasis>. <simplesect kind="return"><para>Zero on success or -1 with errno set to:<itemizedlist>
<listitem><para>EINVAL: <emphasis>attr</emphasis> does not refer to an initialized thread attribute object </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" line="93" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" bodystart="93" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="group___p_t_h_r_e_a_d___a_t_t_r_1gad437fe8caa3ef9f0cb7d69f6f6479df9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_setinheritsched</definition>
        <argsstring>(pthread_attr_t *attr, int inheritsched)</argsstring>
        <name>pthread_attr_setinheritsched</name>
        <param>
          <type>pthread_attr_t *</type>
          <declname>attr</declname>
          <briefdescription><para>a pointer to the attributes structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>inheritsched</declname>
          <briefdescription><para>the new inherit sched value </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function sets the inherit sched in <emphasis>attr</emphasis> with <emphasis>inheritsched</emphasis>. <simplesect kind="return"><para>Zero on success or -1 with errno set to:<itemizedlist>
<listitem><para>EINVAL: <emphasis>attr</emphasis> does not refer to an initialized thread attribute object</para></listitem><listitem><para>EINVAL: <emphasis>inheritsched</emphasis> is not a valid value </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" line="113" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" bodystart="113" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="group___p_t_h_r_e_a_d___a_t_t_r_1gafd3d272d702481044f8a8cd253fd9b47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_getschedparam</definition>
        <argsstring>(const pthread_attr_t *attr, struct sched_param *param)</argsstring>
        <name>pthread_attr_getschedparam</name>
        <param>
          <type>const pthread_attr_t *</type>
          <declname>attr</declname>
          <briefdescription><para>a pointer to the attributes structure </para></briefdescription>
        </param>
        <param>
          <type>struct sched_param *</type>
          <declname>param</declname>
          <briefdescription><para>the destination for the sched param value </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function gets the scheduling parameters from <emphasis>attr</emphasis> and stores it in <emphasis>param</emphasis>. <simplesect kind="return"><para>Zero on success or -1 with errno set to:<itemizedlist>
<listitem><para>EINVAL: <emphasis>attr</emphasis> does not refer to an initialized thread attribute object </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" line="141" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" bodystart="141" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="group___p_t_h_r_e_a_d___a_t_t_r_1ga579e6529f0ce482312a5e77ac61cb4d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_setschedparam</definition>
        <argsstring>(pthread_attr_t *attr, const struct sched_param *param)</argsstring>
        <name>pthread_attr_setschedparam</name>
        <param>
          <type>pthread_attr_t *</type>
          <declname>attr</declname>
          <briefdescription><para>a pointer to the attributes structure </para></briefdescription>
        </param>
        <param>
          <type>const struct sched_param *</type>
          <declname>param</declname>
          <briefdescription><para>the source for the sched param value </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function sets the scheduling parameters in <emphasis>attr</emphasis> with <emphasis>param</emphasis>. <simplesect kind="return"><para>Zero on success or -1 with errno set to:<itemizedlist>
<listitem><para>EINVAL: <emphasis>attr</emphasis> does not refer to an initialized thread attribute object </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" line="155" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" bodystart="155" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="group___p_t_h_r_e_a_d___a_t_t_r_1gaf032906f326f3c209c7eed6bb248ebee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_getschedpolicy</definition>
        <argsstring>(const pthread_attr_t *attr, int *policy)</argsstring>
        <name>pthread_attr_getschedpolicy</name>
        <param>
          <type>const pthread_attr_t *</type>
          <declname>attr</declname>
          <briefdescription><para>a pointer to the attributes structure </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>policy</declname>
          <briefdescription><para>the destination for the schedule policy value </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function gets the scheduling policy from <emphasis>attr</emphasis> and stores it in <emphasis>policy</emphasis>. <simplesect kind="return"><para>Zero on success or -1 with errno set to:<itemizedlist>
<listitem><para>EINVAL: <emphasis>attr</emphasis> does not refer to an initialized thread attribute object </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" line="184" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" bodystart="184" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="group___p_t_h_r_e_a_d___a_t_t_r_1ga79b4c9e71486a87ef3014f1c660b33eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_setschedpolicy</definition>
        <argsstring>(pthread_attr_t *attr, int policy)</argsstring>
        <name>pthread_attr_setschedpolicy</name>
        <param>
          <type>pthread_attr_t *</type>
          <declname>attr</declname>
          <briefdescription><para>a pointer to the attributes structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>policy</declname>
          <briefdescription><para>the new policy value (SCHED_FIFO, SCHED_RR, or SCHED_OTHER) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function sets the scheduling policy in <emphasis>attr</emphasis> with <emphasis>policy</emphasis>. <simplesect kind="return"><para>Zero on success or -1 with errno set to:<itemizedlist>
<listitem><para>EINVAL: <emphasis>attr</emphasis> does not refer to an initialized thread attribute object</para></listitem><listitem><para>EINVAL: <emphasis>policy</emphasis> does not refer to a valid policy. </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" line="199" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" bodystart="199" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="group___p_t_h_r_e_a_d___a_t_t_r_1gad3fe01698c4fad85bb5cc3f9a2e82ea3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_getscope</definition>
        <argsstring>(const pthread_attr_t *attr, int *contentionscope)</argsstring>
        <name>pthread_attr_getscope</name>
        <param>
          <type>const pthread_attr_t *</type>
          <declname>attr</declname>
          <briefdescription><para>a pointer to the attributes structure </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>contentionscope</declname>
          <briefdescription><para>the destination for the contention scope value </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function gets the contention scope from <emphasis>attr</emphasis> and stores it in <emphasis>contentionscope</emphasis>. <simplesect kind="return"><para>Zero on success or -1 with errno set to:<itemizedlist>
<listitem><para>EINVAL: <emphasis>attr</emphasis> does not refer to an initialized thread attribute object </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" line="223" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" bodystart="223" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="group___p_t_h_r_e_a_d___a_t_t_r_1ga6d8d320a882ba044a064975dddcf9ced" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_setscope</definition>
        <argsstring>(pthread_attr_t *attr, int contentionscope)</argsstring>
        <name>pthread_attr_setscope</name>
        <param>
          <type>pthread_attr_t *</type>
          <declname>attr</declname>
          <briefdescription><para>a pointer to the attributes structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>contentionscope</declname>
          <briefdescription><para>the new contention scope value </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function sets the contention scope in <emphasis>attr</emphasis> with <emphasis>contentionscope</emphasis>. <simplesect kind="return"><para>Zero on success or -1 with errno set to:<itemizedlist>
<listitem><para>EINVAL: <emphasis>attr</emphasis> does not refer to an initialized thread attribute object</para></listitem><listitem><para>ENOTSUP: contentionscope is not PTHREAD_SCOPE_SYSTEM or PTHREAD_SCOPE_PROCESS </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" line="243" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" bodystart="243" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="group___p_t_h_r_e_a_d___a_t_t_r_1gae23600d4670359ab12bfba20db2c9a37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_getstacksize</definition>
        <argsstring>(const pthread_attr_t *attr, size_t *stacksize)</argsstring>
        <name>pthread_attr_getstacksize</name>
        <param>
          <type>const pthread_attr_t *</type>
          <declname>attr</declname>
          <briefdescription><para>a pointer to the attributes structure </para></briefdescription>
        </param>
        <param>
          <type>size_t *</type>
          <declname>stacksize</declname>
          <briefdescription><para>the destination for the new stack size </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This functions gets the stack size from <emphasis>attr</emphasis> and stores it in <emphasis>stacksize</emphasis>. <simplesect kind="return"><para>Zero on success or -1 with errno set to:<itemizedlist>
<listitem><para>EINVAL: <emphasis>attr</emphasis> does not refer to an initialized thread attribute object </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" line="270" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" bodystart="270" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="group___p_t_h_r_e_a_d___a_t_t_r_1ga812a9a455ae2ef2bb0dca4fff201a281" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_setstacksize</definition>
        <argsstring>(pthread_attr_t *attr, size_t stacksize)</argsstring>
        <name>pthread_attr_setstacksize</name>
        <param>
          <type>pthread_attr_t *</type>
          <declname>attr</declname>
          <briefdescription><para>a pointer to the attributes structure </para></briefdescription>
        </param>
        <param>
          <type>size_t</type>
          <declname>stacksize</declname>
          <briefdescription><para>the new stack size value </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function sets the stack size in <emphasis>attr</emphasis> with <emphasis>stacksize</emphasis>. <simplesect kind="return"><para>Zero on success or -1 with errno set to:<itemizedlist>
<listitem><para>EINVAL: <emphasis>attr</emphasis> does not refer to an initialized thread attribute object</para></listitem><listitem><para>EINVAL: <emphasis>stacksize</emphasis> is too low of a value</para></listitem><listitem><para>ENOMEM: not enough memory </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" line="286" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" bodystart="286" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="group___p_t_h_r_e_a_d___a_t_t_r_1gadd78bd0e6395c9fbd8ed170a67da0b87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_getstackaddr</definition>
        <argsstring>(const pthread_attr_t *attr, void **stackaddr)</argsstring>
        <name>pthread_attr_getstackaddr</name>
        <param>
          <type>const pthread_attr_t *</type>
          <declname>attr</declname>
          <briefdescription><para>a pointer to the attributes structure </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>stackaddr</declname>
          <briefdescription><para>the destination for the stack address </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This functions gets the stack address from <emphasis>attr</emphasis> and stores it in <emphasis>stackaddr</emphasis>. <simplesect kind="return"><para>Zero on success or -1 with errno set to:<itemizedlist>
<listitem><para>EINVAL: <emphasis>attr</emphasis> does not refer to an initialized thread attribute object </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" line="315" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" bodystart="315" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="group___p_t_h_r_e_a_d___a_t_t_r_1ga298a51c79184546ef78800ea6d4463b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_setstackaddr</definition>
        <argsstring>(pthread_attr_t *attr, void *stackaddr)</argsstring>
        <name>pthread_attr_setstackaddr</name>
        <param>
          <type>pthread_attr_t *</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>stackaddr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is not supported. <simplesect kind="return"><para>-1 with errno equal to ENOTSUP </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" line="328" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr.c" bodystart="328" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="group___p_t_h_r_e_a_d___a_t_t_r_1ga0b85ebb1e3aac081a4c0a5e85ae3cbe9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_init</definition>
        <argsstring>(pthread_attr_t *attr)</argsstring>
        <name>pthread_attr_init</name>
        <param>
          <type>pthread_attr_t *</type>
          <declname>attr</declname>
          <briefdescription><para>a pointer to the attributes structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function initializes <emphasis>attr</emphasis> to the default values. <simplesect kind="return"><para>0 on success or -1 and errno set to:<itemizedlist>
<listitem><para>ENOMEM: Could not allocate memory for the thread attribute </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr_init.c" line="26" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr_init.c" bodystart="26" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="group___p_t_h_r_e_a_d___a_t_t_r_1ga4bcdbf47c17c7dcc51e9f05f5cb56d81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_attr_destroy</definition>
        <argsstring>(pthread_attr_t *attr)</argsstring>
        <name>pthread_attr_destroy</name>
        <param>
          <type>pthread_attr_t *</type>
          <declname>attr</declname>
          <briefdescription><para>a pointer to the attributes structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function destroys <emphasis>attr</emphasis>. <simplesect kind="return"><para>0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr_init.c" line="48" column="1" bodyfile="/Users/tgil/git/CoActionOS/CoActionOS/src/sys/pthread/pthread_attr_init.c" bodystart="48" bodyend="64"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
